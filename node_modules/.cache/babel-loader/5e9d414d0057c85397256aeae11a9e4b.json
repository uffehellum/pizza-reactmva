{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseComponent, getNativeProps, divProperties, classNamesFunction, getWindow, isDirectionalKeyCode } from '../../Utilities';\nimport { getStyles } from './Fabric.styles';\nvar getClassNames = classNamesFunction();\n\nvar FabricBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FabricBase, _super);\n\n  function FabricBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._rootElement = React.createRef();\n\n    _this._onMouseDown = function (ev) {\n      _this.setState({\n        isFocusVisible: false\n      });\n    };\n\n    _this._onKeyDown = function (ev) {\n      if (isDirectionalKeyCode(ev.which)) {\n        _this.setState({\n          isFocusVisible: true\n        });\n      }\n    };\n\n    _this.state = {\n      isFocusVisible: false\n    };\n    return _this;\n  }\n\n  FabricBase.prototype.render = function () {\n    var classNames = getClassNames(getStyles, tslib_1.__assign({}, this.props, this.state));\n    var divProps = getNativeProps(this.props, divProperties);\n    return React.createElement(\"div\", tslib_1.__assign({}, divProps, {\n      className: classNames.root,\n      ref: this._rootElement\n    }));\n  };\n\n  FabricBase.prototype.componentDidMount = function () {\n    var win = getWindow(this._rootElement.current);\n\n    if (win) {\n      this._events.on(win, 'mousedown', this._onMouseDown, true);\n\n      this._events.on(win, 'keydown', this._onKeyDown, true);\n    }\n  };\n\n  return FabricBase;\n}(BaseComponent);\n\nexport { FabricBase };","map":null,"metadata":{},"sourceType":"module"}