{"ast":null,"code":"import { FontSizes, HighContrastSelector, getGlobalClassNames } from '../../../Styling';\nimport { personaPresenceSize, presenceBoolean, sizeBoolean } from '../PersonaConsts';\nvar GlobalClassNames = {\n  presence: 'ms-Persona-presence',\n  presenceIcon: 'ms-Persona-presenceIcon'\n};\nexport var getStyles = function getStyles(props) {\n  var theme = props.theme;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var size = sizeBoolean(props.size);\n  var presence = presenceBoolean(props.presence); // Presence colors\n\n  var presenceColorAvailable = '#7FBA00';\n  var presenceColorAway = '#FCD116';\n  var presenceColorBusy = '#D93B3B';\n  var presenceColorDnd = '#E81123';\n  var presenceColorOffline = '#93ABBD';\n  return {\n    presence: [classNames.presence, {\n      position: 'absolute',\n      height: personaPresenceSize.size12,\n      width: personaPresenceSize.size12,\n      borderRadius: '50%',\n      top: 'auto',\n      right: \"-\" + personaPresenceSize.border,\n      bottom: \"-\" + personaPresenceSize.border,\n      border: personaPresenceSize.border + \" solid \" + semanticColors.bodyBackground,\n      textAlign: 'center',\n      boxSizing: 'content-box',\n      backgroundClip: 'content-box',\n      MsHighContrastAdjust: 'none',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Window',\n        backgroundColor: 'WindowText'\n      }, _a)\n    }, size.isSize10 && {\n      right: 'auto',\n      top: '7px',\n      left: 0,\n      border: 0,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        top: '9px',\n        border: '1px solid WindowText'\n      }, _b)\n    }, (size.isSize10 || size.isSize24 || size.isSize28 || size.isSize32) && {\n      height: personaPresenceSize.size8,\n      width: personaPresenceSize.size8\n    }, size.isSize16 && {\n      height: personaPresenceSize.size6,\n      width: personaPresenceSize.size6,\n      borderWidth: '1.5px'\n    }, size.isSize72 && {\n      height: personaPresenceSize.size20,\n      width: personaPresenceSize.size20\n    }, size.isSize100 && {\n      height: personaPresenceSize.size28,\n      width: personaPresenceSize.size28\n    }, presence.isAvailable && {\n      backgroundColor: presenceColorAvailable,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        backgroundColor: 'Highlight'\n      }, _c)\n    }, presence.isAway && {\n      backgroundColor: presenceColorAway\n    }, presence.isBlocked && [{\n      backgroundColor: semanticColors.bodyBackground,\n      selectors: (_d = {\n        ':before': {\n          content: '\"\"',\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          border: personaPresenceSize.border + \" solid \" + presenceColorBusy,\n          borderRadius: '50%',\n          boxSizing: 'border-box'\n        },\n        // Only show :after at larger sizes\n        ':after': size.isSize40 || size.isSize48 || size.isSize72 || size.isSize100 ? {\n          content: '\"\"',\n          width: '100%',\n          height: personaPresenceSize.border,\n          backgroundColor: presenceColorBusy,\n          transform: 'translateY(-50%) rotate(-45deg)',\n          position: 'absolute',\n          top: '50%',\n          left: 0\n        } : undefined\n      }, _d[HighContrastSelector] = {\n        backgroundColor: 'WindowText',\n        selectors: {\n          ':before': {\n            width: \"calc(100% - \" + personaPresenceSize.border + \")\",\n            height: \"calc(100% - \" + personaPresenceSize.border + \")\",\n            top: parseFloat(personaPresenceSize.border) / 2 + 'px',\n            left: parseFloat(personaPresenceSize.border) / 2 + 'px',\n            borderColor: 'Window'\n          },\n          ':after': {\n            width: \"calc(100% - \" + parseFloat(personaPresenceSize.border) * 2 + \"px)\",\n            left: personaPresenceSize.border,\n            backgroundColor: 'Window'\n          }\n        }\n      }, _d)\n    }], presence.isBusy && {\n      backgroundColor: presenceColorBusy\n    }, presence.isDoNotDisturb && {\n      backgroundColor: presenceColorDnd\n    }, presence.isOffline && {\n      backgroundColor: presenceColorOffline\n    }],\n    presenceIcon: [classNames.presenceIcon, {\n      color: semanticColors.bodyBackground,\n      fontSize: '6px',\n      lineHeight: personaPresenceSize.size12,\n      verticalAlign: 'top',\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        color: 'Window'\n      }, _e)\n    }, size.isSize72 && {\n      fontSize: FontSizes.small,\n      lineHeight: personaPresenceSize.size20\n    }, size.isSize100 && {\n      fontSize: FontSizes.medium,\n      lineHeight: personaPresenceSize.size28\n    }, presence.isAway && {\n      position: 'relative',\n      left: '1px'\n    }]\n  };\n\n  var _a, _b, _c, _d, _e;\n};","map":null,"metadata":{},"sourceType":"module"}