{"ast":null,"code":"import { PersonaInitialsColor } from './Persona.types';\n/**\r\n * These colors are considered reserved colors and can only be set with overrides:\r\n * - Red is a color that often has a special meaning.\r\n * - Transparent is not intended to be used with typical initials due to accessibility issues,\r\n *   its primary use is for Facepile overflow buttons.\r\n */\n\nvar COLOR_SWATCHES_LOOKUP = [PersonaInitialsColor.lightGreen, PersonaInitialsColor.lightBlue, PersonaInitialsColor.lightPink, PersonaInitialsColor.green, PersonaInitialsColor.darkGreen, PersonaInitialsColor.pink, PersonaInitialsColor.magenta, PersonaInitialsColor.purple, PersonaInitialsColor.violet, PersonaInitialsColor.teal, PersonaInitialsColor.blue, PersonaInitialsColor.darkBlue, PersonaInitialsColor.orange, PersonaInitialsColor.darkRed];\nvar COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName) {\n  var color = PersonaInitialsColor.blue;\n\n  if (!displayName) {\n    return color;\n  }\n\n  var hashCode = 0;\n\n  for (var iLen = displayName.length - 1; iLen >= 0; iLen--) {\n    var ch = displayName.charCodeAt(iLen);\n    var shift = iLen % 8; // tslint:disable-next-line:no-bitwise\n\n    hashCode ^= (ch << shift) + (ch >> 8 - shift);\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor) {\n  switch (personaInitialsColor) {\n    case PersonaInitialsColor.lightBlue:\n      return '#6BA5E7';\n\n    case PersonaInitialsColor.blue:\n      return '#2D89EF';\n\n    case PersonaInitialsColor.darkBlue:\n      return '#2B5797';\n\n    case PersonaInitialsColor.teal:\n      return '#00ABA9';\n\n    case PersonaInitialsColor.lightGreen:\n      return '#99B433';\n\n    case PersonaInitialsColor.green:\n      return '#00A300';\n\n    case PersonaInitialsColor.darkGreen:\n      return '#1E7145';\n\n    case PersonaInitialsColor.lightPink:\n      return '#E773BD';\n\n    case PersonaInitialsColor.pink:\n      return '#FF0097';\n\n    case PersonaInitialsColor.magenta:\n      return '#7E3878';\n\n    case PersonaInitialsColor.purple:\n      return '#603CBA';\n\n    case PersonaInitialsColor.black:\n      return '#1D1D1D';\n\n    case PersonaInitialsColor.orange:\n      return '#DA532C';\n\n    case PersonaInitialsColor.red:\n      return '#EE1111';\n\n    case PersonaInitialsColor.darkRed:\n      return '#B91D47';\n\n    case PersonaInitialsColor.transparent:\n      return 'transparent';\n\n    case PersonaInitialsColor.violet:\n      return '#5E4B8B';\n  }\n}\n\nexport function initialsColorPropToColorCode(props) {\n  var primaryText = props.primaryText,\n      text = props.text;\n  var initialsColor = props.initialsColor;\n  var initialsColorCode;\n\n  if (typeof initialsColor === 'string') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}","map":null,"metadata":{},"sourceType":"module"}