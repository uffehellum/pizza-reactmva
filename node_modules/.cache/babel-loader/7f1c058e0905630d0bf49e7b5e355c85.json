{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\src\\\\components\\\\PostList\\\\PostList.tsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts as _fetchPosts } from '../../redux/actions/postActions';\n\nvar PostList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostList, _Component);\n\n  function PostList(props) {\n    var _this;\n\n    _classCallCheck(this, PostList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostList).call(this, props));\n\n    _this.renderPosts = function (posts) {\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"title\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"userid\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, posts.map(function (p) {\n        return React.createElement(\"tr\", {\n          key: p.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, p.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, p.title), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, p.userId));\n      })));\n    };\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Posts\"), _this.props && _this.props.posts && _this.renderPosts(_this.props.posts));\n    };\n\n    return _this;\n  }\n\n  _createClass(PostList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('Posts.componentWillMount()');\n      this.props.fetchPosts();\n    }\n  }]);\n\n  return PostList;\n}(Component);\n\nfunction mapStateToProps(state, ownProps) {\n  return _objectSpread({}, ownProps, {\n    posts: state.posts\n  });\n}\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return {\n    // ...ownProps,\n    fetchPosts: function fetchPosts() {\n      return _fetchPosts()(dispatch);\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);","map":{"version":3,"sources":["C:\\Users\\v-negari\\Desktop\\Prototype\\pizza-reactmva\\src\\components\\PostList\\PostList.tsx"],"names":["React","Component","connect","fetchPosts","PostList","props","renderPosts","posts","map","p","id","title","userId","render","console","log","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAU,IAAVA,WAAT,QAA2B,iCAA3B;;IAqBMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAA0B;AAAA;;AAAA;;AACxB,kFAAMA,KAAN;;AADwB,UAS1BC,WAT0B,GASZ,UAACC,KAAD;AAAA,aACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACC,GAAN,CAAU,UAACC,CAAD;AAAA,eACT;AAAI,UAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,CAAC,CAACC,EAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,CAAC,CAACE,KAAP,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,CAAC,CAACG,MAAP,CAHF,CADS;AAAA,OAAV,CADH,CARF,CADY;AAAA,KATY;;AAAA,UA4B1BC,MA5B0B,GA4BjB;AAAA,aACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,MAAKR,KAAL,IAAc,MAAKA,KAAL,CAAWE,KAAzB,IAAkC,MAAKD,WAAL,CAAiB,MAAKD,KAAL,CAAWE,KAA5B,CAFrC,CADO;AAAA,KA5BiB;;AAAA;AAEzB;;;;yCAEoB;AACnBO,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,WAAKV,KAAL,CAAWF,UAAX;AACD;;;;EAToBF,S;;AAyCvB,SAASe,eAAT,CAAyBC,KAAzB,EAA8CC,QAA9C,EAA8E;AAC5E,2BACKA,QADL;AAEEX,IAAAA,KAAK,EAAEU,KAAK,CAACV;AAFf;AAID;;AAED,SAASY,kBAAT,CAA4BC,QAA5B,EAA2CF,QAA3C,EAA8E;AAC5E,SAAO;AACL;AACAf,IAAAA,UAAU,EAAE;AAAA,aAAKA,WAAU,GAAGiB,QAAH,CAAf;AAAA;AAFP,GAAP;AAID;;AAMD,eAAelB,OAAO,CAEnBc,eAFmB,EAEFG,kBAFE,CAAP,CAGZf,QAHY,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchPosts } from '../../redux/actions/postActions'\r\nimport { Post } from '../../types'\r\n\r\nexport interface OwnProps {\r\n  propFromParent: number\r\n}\r\n\r\ninterface StateProps {\r\n  posts: Post[] // FromReduxStore\r\n}\r\n\r\ninterface DispatchProps {\r\n  fetchPosts: () => void\r\n}\r\n\r\ntype Props = StateProps & DispatchProps & OwnProps\r\n\r\ninterface State {\r\n  // posts: Post[]\r\n}\r\n\r\nclass PostList extends Component<Props, State, any> {\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log('Posts.componentWillMount()')\r\n    this.props.fetchPosts()\r\n  }\r\n\r\n  renderPosts = (posts: Post[]) =>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>id</th>\r\n          <th>title</th>\r\n          <th>userid</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {posts.map((p: Post) =>\r\n          <tr key={p.id}>\r\n            <td>{p.id}</td>\r\n            <td>{p.title}</td>\r\n            <td>{p.userId}</td>\r\n          </tr>)}\r\n      </tbody>\r\n    </table>\r\n\r\n  render = () =>\r\n    <div>\r\n      <h1>Posts</h1>\r\n      {this.props && this.props.posts && this.renderPosts(this.props.posts)}\r\n    </div>\r\n}\r\n\r\ninterface myReduxState {\r\n  posts: Post[]\r\n}\r\n\r\nfunction mapStateToProps(state: myReduxState, ownProps: OwnProps): StateProps {\r\n  return {\r\n    ...ownProps,\r\n    posts: state.posts\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any, ownProps: OwnProps): DispatchProps {\r\n  return {\r\n    // ...ownProps,\r\n    fetchPosts: ()=> fetchPosts()(dispatch)\r\n  }\r\n}\r\n\r\ninterface initialState {\r\n  posts: Post[]\r\n}\r\n\r\nexport default connect\r\n  <myReduxState, DispatchProps, OwnProps, initialState>\r\n  (mapStateToProps, mapDispatchToProps)\r\n  (PostList)\r\n"]},"metadata":{},"sourceType":"module"}