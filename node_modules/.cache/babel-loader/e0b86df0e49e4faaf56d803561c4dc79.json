{"ast":null,"code":"import { ActionTypes } from '../../types';\nimport typicode from '../../repository/typicode';\nexport var fetchPosts = function fetchPosts() {\n  return function (dispatch) {\n    return typicode.FetchPosts().then(function (posts) {\n      return dispatch({\n        type: ActionTypes.FETCH_POSTS,\n        payload: posts\n      });\n    });\n  };\n};\nexport var newPost = function newPost(post) {\n  return function (dispatch) {\n    return typicode.AddPost(post).then(function (res) {\n      return res.json();\n    }).then(function (post) {\n      return dispatch({\n        type: ActionTypes.NEW_POST,\n        payload: post\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\v-negari\\Desktop\\Prototype\\pizza-reactmva\\src\\redux\\actions\\postActions.ts"],"names":["ActionTypes","typicode","fetchPosts","dispatch","FetchPosts","then","posts","type","FETCH_POSTS","payload","newPost","post","AddPost","res","json","NEW_POST"],"mappings":"AAAA,SAASA,WAAT,QAAkC,aAAlC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AASA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAACC,QAAD;AAAA,WAC5BF,QAAQ,CAACG,UAAT,GACKC,IADL,CACU,UAAAC,KAAK;AAAA,aAAIH,QAAQ,CAAC;AACpBI,QAAAA,IAAI,EAAEP,WAAW,CAACQ,WADE;AAEpBC,QAAAA,OAAO,EAAEH;AAFW,OAAD,CAAZ;AAAA,KADf,CAD4B;AAAA,GAAN;AAAA,CAAnB;AAOP,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;AAAA,SAAgB,UAACR,QAAD;AAAA,WACnCF,QAAQ,CAACW,OAAT,CAAiBD,IAAjB,EACKN,IADL,CACU,UAAAQ,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADb,EAEKT,IAFL,CAEU,UAAAM,IAAI;AAAA,aAAIR,QAAQ,CAAC;AACnBI,QAAAA,IAAI,EAAEP,WAAW,CAACe,QADC;AAEnBN,QAAAA,OAAO,EAAEE;AAFU,OAAD,CAAZ;AAAA,KAFd,CADmC;AAAA,GAAhB;AAAA,CAAhB","sourcesContent":["import { ActionTypes, Post } from '../../types'\r\nimport typicode from '../../repository/typicode'\r\n\r\ninterface DispatchType {\r\n    type: string\r\n    payload: any\r\n}\r\n\r\ntype DispatchFunction = (x: DispatchType) => void\r\n\r\nexport const fetchPosts = () => (dispatch: DispatchFunction) =>\r\n    typicode.FetchPosts()\r\n        .then(posts => dispatch({\r\n            type: ActionTypes.FETCH_POSTS,\r\n            payload: posts,\r\n        }))\r\n\r\nexport const newPost = (post: Post) => (dispatch: DispatchFunction) =>\r\n    typicode.AddPost(post)\r\n        .then(res => res.json())\r\n        .then(post => dispatch({\r\n            type: ActionTypes.NEW_POST,\r\n            payload: post\r\n        }))\r\n"]},"metadata":{},"sourceType":"module"}