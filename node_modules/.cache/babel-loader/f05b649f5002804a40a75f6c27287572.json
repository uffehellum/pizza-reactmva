{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\src\\\\components\\\\PizzaPage\\\\PizzaPage.tsx\";\nimport React, { Component } from 'react';\nimport ConversationPane from '../ConversationPane';\nimport InboxPane from '../InboxPane';\nimport StorePane from '../StorePane';\nimport samples from '../../data';\nimport { Route } from 'react-router-dom';\nimport './PizzaPage.css'; // import { initializeIcons } from '@uifabric/icons'\n// initializeIcons()\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.loadSampleData = function () {\n      _this.setState(samples);\n    };\n\n    _this.state = {\n      humans: {},\n      stores: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadSampleData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var humans = this.state.humans;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        id: \"inbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(InboxPane, {\n        humans: humans,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Select a Conversation from the Inbox\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/conversation/:human\",\n        render: function render(_ref) {\n          var match = _ref.match;\n          var human = match && match.params.human;\n          return human && humans[human] ? React.createElement(ConversationPane, {\n            human: human,\n            conversations: humans[human].conversations,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }) : React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"oops \", human, \" doesn't work\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        id: \"storepane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(StorePane, {\n        stores: this.state.stores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\v-negari\\Desktop\\Prototype\\pizza-reactmva\\src\\components\\PizzaPage\\PizzaPage.tsx"],"names":["React","Component","ConversationPane","InboxPane","StorePane","samples","Route","App","props","loadSampleData","setState","state","humans","stores","match","human","params","conversations"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAO,iBAAP,C,CACA;AAEA;;IAcMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,6EAAMA,KAAN;;AADsB,UAQxBC,cARwB,GAQP,YAAM;AACrB,YAAKC,QAAL,CAAcL,OAAd;AACD,KAVuB;;AAEtB,UAAKM,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAFsB;AAMvB;;;;yCAMoB;AACnB,WAAKJ,cAAL;AACD;;;6BAEQ;AACP,UAAMG,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,EAAE,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAN;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,sBAAZ;AAAmC,QAAA,MAAM,EAAE,sBAAe;AAAA,cAAZE,KAAY,QAAZA,KAAY;AACxD,cAAMC,KAAK,GAAGD,KAAK,IAAIA,KAAK,CAACE,MAAN,CAAaD,KAApC;AACA,iBAAOA,KAAK,IAAIH,MAAM,CAACG,KAAD,CAAf,GACH,oBAAC,gBAAD;AAAkB,YAAA,KAAK,EAAEA,KAAzB;AAAgC,YAAA,aAAa,EAAEH,MAAM,CAACG,KAAD,CAAN,CAAcE,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,GAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAWF,KAAX,kBAFJ;AAGD,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CANF,EAgBE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,EAAE,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAhBF,CADF,CADF;AAwBD;;;;EA5CeZ,S;;AAgDlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ConversationPane from '../ConversationPane'\r\nimport InboxPane from '../InboxPane'\r\nimport StorePane from '../StorePane'\r\nimport samples from '../../data'\r\nimport { Humans, Stores, Conversation } from '../../data'\r\nimport { Route } from 'react-router-dom'\r\nimport './PizzaPage.css';\r\n// import { initializeIcons } from '@uifabric/icons'\r\n\r\n// initializeIcons()\r\n\r\ninterface AppState {\r\n  humans: Humans,\r\n  stores: Stores,\r\n}\r\n\r\ninterface AppProps {\r\n  params?: {\r\n    human?: string\r\n  }\r\n  children?: any\r\n}\r\n\r\nclass App extends Component<AppProps, AppState> {\r\n\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      humans: {},\r\n      stores: {},\r\n    }\r\n  }\r\n\r\n  loadSampleData = () => {\r\n    this.setState(samples)\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.loadSampleData()\r\n  }\r\n\r\n  render() {\r\n    const humans = this.state.humans\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"column\" id=\"inbox\">\r\n            <InboxPane\r\n              humans={humans}\r\n            />\r\n          </div>\r\n          <div className=\"column\">\r\n            <Route exact path=\"/\" render={() => <div>Select a Conversation from the Inbox</div>} />\r\n            <Route path=\"/conversation/:human\" render={({ match }) => {\r\n              const human = match && match.params.human\r\n              return human && humans[human]\r\n                ? <ConversationPane human={human} conversations={humans[human].conversations} />\r\n                : <div>oops {human} doesn't work</div>\r\n            }} />\r\n\r\n          </div>\r\n          <div className=\"column\" id=\"storepane\">\r\n            <StorePane stores={this.state.stores} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}