{"ast":null,"code":"import { mergeStyleSets } from '@uifabric/merge-styles';\n/**\r\n * Creates a getClassNames function which calls getStyles given the props, and injects them\r\n * into mergeStyleSets.\r\n */\n\nexport function classNamesFunction() {\n  // TODO: memoize.\n  var getClassNames = function getClassNames(styleFunctionOrObject, styleProps) {\n    if (styleProps === void 0) {\n      styleProps = {};\n    } // styleSet might be undefined if styleFunctionOrObject is undefined, but getStyles should never\n    // ordinarily be undefined (it would hardly make any sense).\n    // However, because we usually use `props.styles` as the argument to an invocation of this method, and\n    // `props.styles` itself is defined as optional, this avoids the need to use `!` at all invocation points.\n\n\n    if (styleFunctionOrObject === undefined) {\n      return {};\n    }\n\n    var styleSet = styleFunctionOrObject && (typeof styleFunctionOrObject === 'function' ? styleFunctionOrObject(styleProps) : styleFunctionOrObject);\n    return mergeStyleSets(styleSet);\n  };\n\n  return getClassNames;\n}","map":null,"metadata":{},"sourceType":"module"}