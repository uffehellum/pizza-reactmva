{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\v-negari\\\\Desktop\\\\Prototype\\\\pizza-reactmva\\\\src\\\\sandbox\\\\pages\\\\ConfigPage\\\\MockConfigCard.tsx\";\nimport React, { Component } from 'react';\nimport { ActionButton } from 'office-ui-fabric-react/lib/Button';\nimport { DocumentCard, DocumentCardTitle } from 'office-ui-fabric-react/lib/DocumentCard';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { ActionTypes } from '../../../types';\nimport { connect } from 'react-redux';\nexport var MockRequestProfileStatusCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MockRequestProfileStatusCard, _Component);\n\n  function MockRequestProfileStatusCard(props) {\n    var _this;\n\n    _classCallCheck(this, MockRequestProfileStatusCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MockRequestProfileStatusCard).call(this, props));\n\n    _this.prefillLocalhost = function () {\n      return _this.props.submit({\n        ContentUrl: 'http://localhost:3002/contentmock',\n        ProfileStatusUrl: 'http://localhost:3003/profilemock'\n      });\n    };\n\n    _this.prefillStage = function () {\n      return _this.props.submit({\n        ContentUrl: 'http://stage/content',\n        ProfileStatusUrl: 'http://stage/profile'\n      });\n    };\n\n    _this.prefillProduction = function () {\n      return _this.props.submit({\n        ContentUrl: 'http://xbox.com/content',\n        ProfileStatusUrl: 'http://xbox.com/profile'\n      });\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    _this.onChangeText = function (e, newValue) {\n      _this.props.submit(_objectSpread({}, _this.props.config, _defineProperty({}, e.target.name, newValue)));\n    };\n\n    _this.render = function () {\n      return React.createElement(DocumentCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(DocumentCardTitle, {\n        title: \"Enter mock config\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: _this.onSubmit,\n        className: \"docs-TextFieldExample\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"ContentUrl\",\n        name: \"ContentUrl\",\n        defaultValue: _this.props.config.ContentUrl,\n        required: true,\n        onChange: _this.onChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"ProfileStatusUrl\",\n        name: \"ProfileStatusUrl\",\n        defaultValue: _this.props.config.ProfileStatusUrl,\n        required: true,\n        onChange: _this.onChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(ActionButton, {\n        onClick: _this.prefillLocalhost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"prefillLocalhost\"), React.createElement(ActionButton, {\n        onClick: _this.prefillStage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"prefillStage\"), React.createElement(ActionButton, {\n        onClick: _this.prefillProduction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"prefillProduction\")));\n    };\n\n    return _this;\n  }\n\n  return MockRequestProfileStatusCard;\n}(Component);\n\nfunction mapDispatchToProps(dispatch, ownProps) {\n  return _objectSpread({}, ownProps, {\n    submit: function submit(config) {\n      return dispatch({\n        type: ActionTypes.CONFIG_FETCH,\n        payload: config\n      });\n    }\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return _objectSpread({}, ownProps, {\n    config: state.config\n  });\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MockRequestProfileStatusCard);","map":{"version":3,"sources":["C:\\Users\\v-negari\\Desktop\\Prototype\\pizza-reactmva\\src\\sandbox\\pages\\ConfigPage\\MockConfigCard.tsx"],"names":["React","Component","ActionButton","DocumentCard","DocumentCardTitle","TextField","ActionTypes","connect","MockRequestProfileStatusCard","props","prefillLocalhost","submit","ContentUrl","ProfileStatusUrl","prefillStage","prefillProduction","onSubmit","e","preventDefault","onChangeText","newValue","config","target","name","render","mapDispatchToProps","dispatch","ownProps","type","CONFIG_FETCH","payload","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component, FormEvent } from 'react'\r\nimport { ActionButton } from 'office-ui-fabric-react/lib/Button'\r\nimport { DocumentCard, DocumentCardTitle } from 'office-ui-fabric-react/lib/DocumentCard'\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField'\r\nimport { Config, ActionTypes } from '../../../types'\r\nimport { connect, MapStateToProps } from 'react-redux';\r\n\r\ninterface DispatchProps {\r\n    submit: (config: Config) => void\r\n}\r\n\r\ninterface OwnProps { }\r\n\r\ninterface StateProps { config: Config }\r\n\r\ntype Props = DispatchProps & StateProps & OwnProps\r\n\r\nexport class MockRequestProfileStatusCard extends Component<Props, any> {\r\n\r\n    prefillLocalhost = () => this.props.submit({\r\n        ContentUrl: 'http://localhost:3002/contentmock',\r\n        ProfileStatusUrl: 'http://localhost:3003/profilemock',\r\n    })\r\n\r\n    prefillStage = () => this.props.submit({\r\n        ContentUrl: 'http://stage/content',\r\n        ProfileStatusUrl: 'http://stage/profile',\r\n    })\r\n\r\n    prefillProduction = () => this.props.submit({\r\n        ContentUrl: 'http://xbox.com/content',\r\n        ProfileStatusUrl: 'http://xbox.com/profile',\r\n    })\r\n\r\n    constructor(props: Props) {\r\n        super(props)\r\n    }\r\n\r\n    onSubmit = (e: FormEvent<any>) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    onChangeText = (e: any, newValue?: string) => {\r\n        this.props.submit({\r\n            ...this.props.config,\r\n            [e.target.name]: newValue,\r\n        })\r\n    }\r\n\r\n    render = () =>\r\n        <DocumentCard>\r\n            <DocumentCardTitle title=\"Enter mock config\" />\r\n            <form onSubmit={this.onSubmit} className=\"docs-TextFieldExample\">\r\n                <TextField\r\n                    label=\"ContentUrl\"\r\n                    name=\"ContentUrl\"\r\n                    defaultValue={this.props.config.ContentUrl}\r\n                    required={true}\r\n                    onChange={this.onChangeText}\r\n                />\r\n                <TextField\r\n                    label=\"ProfileStatusUrl\"\r\n                    name=\"ProfileStatusUrl\"\r\n                    defaultValue={this.props.config.ProfileStatusUrl}\r\n                    required={true}\r\n                    onChange={this.onChangeText}\r\n                />\r\n                <ActionButton onClick={this.prefillLocalhost} >prefillLocalhost</ActionButton>\r\n                <ActionButton onClick={this.prefillStage} >prefillStage</ActionButton>\r\n                <ActionButton onClick={this.prefillProduction} >prefillProduction</ActionButton>\r\n            </form>\r\n        </DocumentCard>\r\n\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: any, ownProps: OwnProps): DispatchProps {\r\n    return {\r\n        ...ownProps,\r\n        submit: (config: Config) => dispatch({\r\n            type: ActionTypes.CONFIG_FETCH,\r\n            payload: config,\r\n        })\r\n    }\r\n}\r\n\r\ninterface myReduxState {\r\n    config: Config\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<StateProps, OwnProps, myReduxState> =\r\n    (state: myReduxState, ownProps: OwnProps) => {\r\n        return {\r\n            ...ownProps,\r\n            config: state.config\r\n        }\r\n    }\r\n\r\nexport default connect\r\n    <StateProps, DispatchProps, OwnProps, myReduxState>\r\n    (mapStateToProps, mapDispatchToProps)\r\n    (MockRequestProfileStatusCard)\r\n"]},"metadata":{},"sourceType":"module"}