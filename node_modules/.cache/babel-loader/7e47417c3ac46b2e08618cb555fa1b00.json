{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseComponent, classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\nimport { TooltipHost, TooltipOverflowMode, DirectionalHint } from '../../Tooltip';\nimport { PersonaCoin } from './PersonaCoin/PersonaCoin';\nimport { PersonaPresence as PersonaPresenceEnum, PersonaSize } from './Persona.types';\nvar getClassNames = classNamesFunction();\n/**\r\n * Persona with no default styles.\r\n * [Use the `styles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n */\n\nvar PersonaBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(PersonaBase, _super);\n\n  function PersonaBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._warnDeprecations({\n      primaryText: 'text'\n    });\n\n    return _this;\n  }\n\n  PersonaBase.prototype.render = function () {\n    // wrapping default render behavior based on various this.props properties\n    var _onRenderPrimaryText = this._onRenderText(this._getText()),\n        _onRenderSecondaryText = this._onRenderText(this.props.secondaryText),\n        _onRenderTertiaryText = this._onRenderText(this.props.tertiaryText),\n        _onRenderOptionalText = this._onRenderText(this.props.optionalText);\n\n    var _a = this.props,\n        hidePersonaDetails = _a.hidePersonaDetails,\n        _b = _a.onRenderOptionalText,\n        onRenderOptionalText = _b === void 0 ? _onRenderOptionalText : _b,\n        _c = _a.onRenderPrimaryText,\n        onRenderPrimaryText = _c === void 0 ? _onRenderPrimaryText : _c,\n        _d = _a.onRenderSecondaryText,\n        onRenderSecondaryText = _d === void 0 ? _onRenderSecondaryText : _d,\n        _e = _a.onRenderTertiaryText,\n        onRenderTertiaryText = _e === void 0 ? _onRenderTertiaryText : _e;\n    var size = this.props.size; // These properties are to be explicitly passed into PersonaCoin because they are the only props directly used\n\n    var _f = this.props,\n        allowPhoneInitials = _f.allowPhoneInitials,\n        className = _f.className,\n        coinProps = _f.coinProps,\n        showUnknownPersonaCoin = _f.showUnknownPersonaCoin,\n        coinSize = _f.coinSize,\n        styles = _f.styles,\n        imageAlt = _f.imageAlt,\n        imageInitials = _f.imageInitials,\n        imageShouldFadeIn = _f.imageShouldFadeIn,\n        imageShouldStartVisible = _f.imageShouldStartVisible,\n        imageUrl = _f.imageUrl,\n        initialsColor = _f.initialsColor,\n        onPhotoLoadingStateChange = _f.onPhotoLoadingStateChange,\n        onRenderCoin = _f.onRenderCoin,\n        onRenderInitials = _f.onRenderInitials,\n        presence = _f.presence,\n        showInitialsUntilImageLoads = _f.showInitialsUntilImageLoads,\n        showSecondaryText = _f.showSecondaryText,\n        theme = _f.theme;\n    var personaCoinProps = {\n      allowPhoneInitials: allowPhoneInitials,\n      coinProps: coinProps,\n      showUnknownPersonaCoin: showUnknownPersonaCoin,\n      coinSize: coinSize,\n      imageAlt: imageAlt,\n      imageInitials: imageInitials,\n      imageShouldFadeIn: imageShouldFadeIn,\n      imageShouldStartVisible: imageShouldStartVisible,\n      imageUrl: imageUrl,\n      initialsColor: initialsColor,\n      onPhotoLoadingStateChange: onPhotoLoadingStateChange,\n      onRenderCoin: onRenderCoin,\n      onRenderInitials: onRenderInitials,\n      presence: presence,\n      showInitialsUntilImageLoads: showInitialsUntilImageLoads,\n      size: size,\n      text: this._getText()\n    };\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      showSecondaryText: showSecondaryText,\n      presence: presence,\n      size: size\n    });\n    var divProps = getNativeProps(this.props, divProperties);\n    var personaDetails = React.createElement(\"div\", {\n      className: classNames.details\n    }, this._renderElement(classNames.primaryText, onRenderPrimaryText, _onRenderPrimaryText), this._renderElement(classNames.secondaryText, onRenderSecondaryText, _onRenderSecondaryText), this._renderElement(classNames.tertiaryText, onRenderTertiaryText, _onRenderTertiaryText), this._renderElement(classNames.optionalText, onRenderOptionalText, _onRenderOptionalText), this.props.children);\n    return React.createElement(\"div\", tslib_1.__assign({}, divProps, {\n      className: classNames.root,\n      style: coinSize ? {\n        height: coinSize,\n        minWidth: coinSize\n      } : undefined\n    }), React.createElement(PersonaCoin, tslib_1.__assign({}, personaCoinProps)), (!hidePersonaDetails || size === PersonaSize.size10 || size === PersonaSize.tiny) && personaDetails);\n  };\n  /**\r\n   * Renders various types of Text (primaryText, secondaryText, etc)\r\n   * based on the classNames passed\r\n   * @param classNames\r\n   * @param renderFunction\r\n   * @param defaultRenderFunction\r\n   */\n\n\n  PersonaBase.prototype._renderElement = function (classNames, renderFunction, defaultRenderFunction) {\n    return React.createElement(\"div\", {\n      className: classNames\n    }, renderFunction && renderFunction(this.props, defaultRenderFunction));\n  };\n  /**\r\n   * Deprecation helper for getting text.\r\n   */\n\n\n  PersonaBase.prototype._getText = function () {\n    return this.props.text || this.props.primaryText || '';\n  };\n  /**\r\n   * using closure to wrap the default render behavior\r\n   * to make it independent of the type of text passed\r\n   * @param text\r\n   */\n\n\n  PersonaBase.prototype._onRenderText = function (text) {\n    // return default render behaviour for valid text or undefined\n    return text ? function () {\n      // default onRender behaviour\n      return React.createElement(TooltipHost, {\n        content: text,\n        overflowMode: TooltipOverflowMode.Parent,\n        directionalHint: DirectionalHint.topLeftEdge\n      }, text);\n    } : undefined;\n  };\n\n  PersonaBase.defaultProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: ''\n  };\n  return PersonaBase;\n}(BaseComponent);\n\nexport { PersonaBase };","map":null,"metadata":{},"sourceType":"module"}