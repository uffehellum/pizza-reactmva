{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseComponent, classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\nimport { TooltipDelay } from './Tooltip.types';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nvar getClassNames = classNamesFunction();\n\nvar TooltipBase =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(TooltipBase, _super);\n\n  function TooltipBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._onRenderContent = function (props) {\n      return React.createElement(\"p\", {\n        className: _this._classNames.subText\n      }, props.content);\n    };\n\n    return _this;\n  }\n\n  TooltipBase.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        calloutProps = _a.calloutProps,\n        delay = _a.delay,\n        directionalHint = _a.directionalHint,\n        directionalHintForRTL = _a.directionalHintForRTL,\n        styles = _a.styles,\n        id = _a.id,\n        maxWidth = _a.maxWidth,\n        _b = _a.onRenderContent,\n        onRenderContent = _b === void 0 ? this._onRenderContent : _b,\n        targetElement = _a.targetElement,\n        theme = _a.theme;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className || calloutProps && calloutProps.className,\n      delay: delay,\n      maxWidth: maxWidth\n    });\n    return React.createElement(Callout, tslib_1.__assign({\n      target: targetElement,\n      directionalHint: directionalHint,\n      directionalHintForRTL: directionalHintForRTL\n    }, calloutProps, getNativeProps(this.props, divProperties, ['id']), {\n      className: this._classNames.root\n    }), React.createElement(\"div\", {\n      className: this._classNames.content,\n      id: id,\n      role: \"tooltip\",\n      onMouseEnter: this.props.onMouseEnter,\n      onMouseLeave: this.props.onMouseLeave\n    }, onRenderContent(this.props, this._onRenderContent)));\n  }; // Specify default props values\n\n\n  TooltipBase.defaultProps = {\n    directionalHint: DirectionalHint.topCenter,\n    delay: TooltipDelay.medium,\n    maxWidth: '364px',\n    calloutProps: {\n      isBeakVisible: true,\n      beakWidth: 16,\n      gapSpace: 0,\n      setInitialFocus: true,\n      doNotLayer: false\n    }\n  };\n  return TooltipBase;\n}(BaseComponent);\n\nexport { TooltipBase };","map":null,"metadata":{},"sourceType":"module"}