{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { getStyles } from './CommandBarButton.styles';\n\nvar CommandBarButton =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CommandBarButton, _super);\n\n  function CommandBarButton() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Tell BaseComponent to bypass resolution of componentRef.\r\n     */\n\n\n    _this._skipComponentRefResolution = true;\n    return _this;\n  }\n\n  CommandBarButton.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        theme = _a.theme;\n    return React.createElement(BaseButton, tslib_1.__assign({}, this.props, {\n      variantClassName: \"ms-Button--commandBar\",\n      styles: getStyles(theme, styles),\n      onRenderDescription: nullRender\n    }));\n  };\n\n  CommandBarButton = tslib_1.__decorate([customizable('CommandBarButton', ['theme', 'styles'], true)], CommandBarButton);\n  return CommandBarButton;\n}(BaseComponent);\n\nexport { CommandBarButton };","map":null,"metadata":{},"sourceType":"module"}