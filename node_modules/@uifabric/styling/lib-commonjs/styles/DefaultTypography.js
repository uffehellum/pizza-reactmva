"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DefaultFontStyles_1 = require("./DefaultFontStyles");
var fonts_1 = require("./fonts");
exports.DefaultFontSizes = {
    mini: fonts_1.FontSizes.mini,
    xSmall: fonts_1.FontSizes.xSmall,
    small: fonts_1.FontSizes.small,
    smallPlus: fonts_1.FontSizes.smallPlus,
    medium: fonts_1.FontSizes.medium,
    mediumPlus: fonts_1.FontSizes.mediumPlus,
    large: fonts_1.FontSizes.large,
    xLarge: fonts_1.FontSizes.xLarge,
    xxLarge: fonts_1.FontSizes.xxLarge,
    mega: fonts_1.FontSizes.mega
};
exports.DefaultFontFamilies = {
    default: DefaultFontStyles_1.DefaultFontStyles.medium.fontFamily,
    monospace: 'Menlo, Monaco, "Courier New", monospace'
};
exports.DefaultFontWeights = {
    default: fonts_1.FontWeights.regular,
    regular: fonts_1.FontWeights.regular,
    light: fonts_1.FontWeights.light,
    semibold: fonts_1.FontWeights.semibold,
    bold: fonts_1.FontWeights.bold
};
exports.DefaultFontVariants = {
    default: {
        family: 'default',
        size: 'inherit'
    },
    caption: {
        size: 'xSmall'
    },
    h1: {
        size: 'mega',
        weight: 'light'
    },
    h2: {
        size: 'xxLarge',
        weight: 'light'
    },
    h3: {
        size: 'xLarge',
        weight: 'light'
    },
    h4: {
        size: 'large',
        weight: 'light'
    },
    h5: {
        size: 'mediumPlus',
        weight: 'light'
    },
    link: {
        color: 'link',
        hoverColor: 'linkHovered'
    }
};
exports.DefaultTypography = {
    families: exports.DefaultFontFamilies,
    sizes: exports.DefaultFontSizes,
    weights: exports.DefaultFontWeights,
    variants: exports.DefaultFontVariants
};
//# sourceMappingURL=DefaultTypography.js.map