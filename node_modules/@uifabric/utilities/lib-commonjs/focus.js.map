{"version":3,"file":"focus.js","sourceRoot":"../src/","sources":["focus.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-string-literal */\r\n\r\nimport { elementContainsAttribute, elementContains, getDocument, getWindow } from './dom';\r\n\r\nconst IS_FOCUSABLE_ATTRIBUTE = 'data-is-focusable';\r\nconst IS_VISIBLE_ATTRIBUTE = 'data-is-visible';\r\nconst FOCUSZONE_ID_ATTRIBUTE = 'data-focuszone-id';\r\nconst FOCUSZONE_SUB_ATTRIBUTE = 'data-is-sub-focuszone';\r\n\r\n/**\r\n * Gets the first focusable element.\r\n *\r\n * @public\r\n */\r\nexport function getFirstFocusable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean\r\n): HTMLElement | null {\r\n  return getNextElement(\r\n    rootElement,\r\n    currentElement,\r\n    true /*checkNode*/,\r\n    false /*suppressParentTraversal*/,\r\n    false /*suppressChildTraversal*/,\r\n    includeElementsInFocusZones\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the last focusable element.\r\n *\r\n * @public\r\n */\r\nexport function getLastFocusable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean\r\n): HTMLElement | null {\r\n  return getPreviousElement(\r\n    rootElement,\r\n    currentElement,\r\n    true /*checkNode*/,\r\n    false /*suppressParentTraversal*/,\r\n    true /*traverseChildren*/,\r\n    includeElementsInFocusZones\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the first tabbable element.\r\n * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.\r\n * @param rootElement - The parent element to search beneath.\r\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\r\n * and iteration continues forward.  Typical use passes rootElement.firstChild.\r\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\r\n * @public\r\n */\r\nexport function getFirstTabbable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean\r\n): HTMLElement | null {\r\n  return getNextElement(\r\n    rootElement,\r\n    currentElement,\r\n    true /*checkNode*/,\r\n    false /*suppressParentTraversal*/,\r\n    false /*suppressChildTraversal*/,\r\n    includeElementsInFocusZones,\r\n    false /*allowFocusRoot*/,\r\n    true /*tabbable*/\r\n  );\r\n}\r\n\r\n/**\r\n * Gets the last tabbable element.\r\n * The difference between focusable and tabbable is that tabbable elements are focusable elements that also have tabIndex != -1.\r\n * @param rootElement - The parent element to search beneath.\r\n * @param currentElement - The descendant of rootElement to start the search at.  This element is the first one checked,\r\n * and iteration continues in reverse.  Typical use passes rootElement.lastChild.\r\n * @param includeElementsInFocusZones - true if traversal should go into FocusZone descendants.\r\n * @public\r\n */\r\nexport function getLastTabbable(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement,\r\n  includeElementsInFocusZones?: boolean\r\n): HTMLElement | null {\r\n  return getPreviousElement(\r\n    rootElement,\r\n    currentElement,\r\n    true /*checkNode*/,\r\n    false /*suppressParentTraversal*/,\r\n    true /*traverseChildren*/,\r\n    includeElementsInFocusZones,\r\n    false /*allowFocusRoot*/,\r\n    true /*tabbable*/\r\n  );\r\n}\r\n\r\n/**\r\n * Attempts to focus the first focusable element that is a child or child's child of the rootElement.\r\n *\r\n * @public\r\n * @param rootElement - Element to start the search for a focusable child.\r\n * @returns True if focus was set, false if it was not.\r\n */\r\nexport function focusFirstChild(rootElement: HTMLElement): boolean {\r\n  let element: HTMLElement | null = getNextElement(rootElement, rootElement, true, false, false, true);\r\n\r\n  if (element) {\r\n    focusAsync(element);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Traverse to find the previous element.\r\n * If tabbable is true, the element must have tabIndex != -1.\r\n *\r\n * @public\r\n */\r\nexport function getPreviousElement(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement | null,\r\n  checkNode?: boolean,\r\n  suppressParentTraversal?: boolean,\r\n  traverseChildren?: boolean,\r\n  includeElementsInFocusZones?: boolean,\r\n  allowFocusRoot?: boolean,\r\n  tabbable?: boolean\r\n): HTMLElement | null {\r\n  if (!currentElement || (!allowFocusRoot && currentElement === rootElement)) {\r\n    return null;\r\n  }\r\n\r\n  let isCurrentElementVisible = isElementVisible(currentElement);\r\n\r\n  // Check its children.\r\n  if (\r\n    traverseChildren &&\r\n    isCurrentElementVisible &&\r\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\r\n  ) {\r\n    const childMatch = getPreviousElement(\r\n      rootElement,\r\n      currentElement.lastElementChild as HTMLElement,\r\n      true,\r\n      true,\r\n      true,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n\r\n    if (childMatch) {\r\n      if ((tabbable && isElementTabbable(childMatch, true)) || !tabbable) {\r\n        return childMatch;\r\n      }\r\n\r\n      const childMatchSiblingMatch = getPreviousElement(\r\n        rootElement,\r\n        childMatch.previousElementSibling as HTMLElement,\r\n        true,\r\n        true,\r\n        true,\r\n        includeElementsInFocusZones,\r\n        allowFocusRoot,\r\n        tabbable\r\n      );\r\n      if (childMatchSiblingMatch) {\r\n        return childMatchSiblingMatch;\r\n      }\r\n\r\n      let childMatchParent = childMatch.parentElement;\r\n\r\n      // At this point if we have not found any potential matches\r\n      // start looking at the rest of the subtree under the currentParent.\r\n      // NOTE: We do not want to recurse here because doing so could\r\n      // cause elements to get skipped.\r\n      while (childMatchParent && childMatchParent !== currentElement) {\r\n        const childMatchParentMatch = getPreviousElement(\r\n          rootElement,\r\n          childMatchParent.previousElementSibling as HTMLElement,\r\n          true,\r\n          true,\r\n          true,\r\n          includeElementsInFocusZones,\r\n          allowFocusRoot,\r\n          tabbable\r\n        );\r\n\r\n        if (childMatchParentMatch) {\r\n          return childMatchParentMatch;\r\n        }\r\n\r\n        childMatchParent = childMatchParent.parentElement;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Check the current node, if it's not the first traversal.\r\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement)) {\r\n    return currentElement;\r\n  }\r\n\r\n  // Check its previous sibling.\r\n  const siblingMatch = getPreviousElement(\r\n    rootElement,\r\n    currentElement.previousElementSibling as HTMLElement,\r\n    true,\r\n    true,\r\n    true,\r\n    includeElementsInFocusZones,\r\n    allowFocusRoot,\r\n    tabbable\r\n  );\r\n\r\n  if (siblingMatch) {\r\n    return siblingMatch;\r\n  }\r\n\r\n  // Check its parent.\r\n  if (!suppressParentTraversal) {\r\n    return getPreviousElement(\r\n      rootElement,\r\n      currentElement.parentElement,\r\n      true,\r\n      false,\r\n      false,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Traverse to find the next focusable element.\r\n * If tabbable is true, the element must have tabIndex != -1.\r\n *\r\n * @public\r\n */\r\nexport function getNextElement(\r\n  rootElement: HTMLElement,\r\n  currentElement: HTMLElement | null,\r\n  checkNode?: boolean,\r\n  suppressParentTraversal?: boolean,\r\n  suppressChildTraversal?: boolean,\r\n  includeElementsInFocusZones?: boolean,\r\n  allowFocusRoot?: boolean,\r\n  tabbable?: boolean\r\n): HTMLElement | null {\r\n  if (!currentElement || (currentElement === rootElement && suppressChildTraversal && !allowFocusRoot)) {\r\n    return null;\r\n  }\r\n\r\n  let isCurrentElementVisible = isElementVisible(currentElement);\r\n\r\n  // Check the current node, if it's not the first traversal.\r\n  if (checkNode && isCurrentElementVisible && isElementTabbable(currentElement, tabbable)) {\r\n    return currentElement;\r\n  }\r\n\r\n  // Check its children.\r\n  if (\r\n    !suppressChildTraversal &&\r\n    isCurrentElementVisible &&\r\n    (includeElementsInFocusZones || !(isElementFocusZone(currentElement) || isElementFocusSubZone(currentElement)))\r\n  ) {\r\n    const childMatch = getNextElement(\r\n      rootElement,\r\n      currentElement.firstElementChild as HTMLElement,\r\n      true,\r\n      true,\r\n      false,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n\r\n    if (childMatch) {\r\n      return childMatch;\r\n    }\r\n  }\r\n\r\n  if (currentElement === rootElement) {\r\n    return null;\r\n  }\r\n\r\n  // Check its sibling.\r\n  const siblingMatch = getNextElement(\r\n    rootElement,\r\n    currentElement.nextElementSibling as HTMLElement,\r\n    true,\r\n    true,\r\n    false,\r\n    includeElementsInFocusZones,\r\n    allowFocusRoot,\r\n    tabbable\r\n  );\r\n\r\n  if (siblingMatch) {\r\n    return siblingMatch;\r\n  }\r\n\r\n  if (!suppressParentTraversal) {\r\n    return getNextElement(\r\n      rootElement,\r\n      currentElement.parentElement,\r\n      false,\r\n      false,\r\n      true,\r\n      includeElementsInFocusZones,\r\n      allowFocusRoot,\r\n      tabbable\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Determines if an element is visible.\r\n *\r\n * @public\r\n */\r\nexport function isElementVisible(element: HTMLElement | undefined | null): boolean {\r\n  // If the element is not valid, return false.\r\n  if (!element || !element.getAttribute) {\r\n    return false;\r\n  }\r\n\r\n  const visibilityAttribute = element.getAttribute(IS_VISIBLE_ATTRIBUTE);\r\n\r\n  // If the element is explicitly marked with the visibility attribute, return that value as boolean.\r\n  if (visibilityAttribute !== null && visibilityAttribute !== undefined) {\r\n    return visibilityAttribute === 'true';\r\n  }\r\n\r\n  // Fallback to other methods of determining actual visibility.\r\n  return (\r\n    element.offsetHeight !== 0 ||\r\n    element.offsetParent !== null ||\r\n    // tslint:disable-next-line:no-any\r\n    (element as any).isVisible === true\r\n  ); // used as a workaround for testing.\r\n}\r\n\r\n/**\r\n * Determines if an element can receive focus programmatically or via a mouse click.\r\n * If checkTabIndex is true, additionally checks to ensure the element can be focused with the tab key, meaning tabIndex != -1.\r\n *\r\n * @public\r\n */\r\nexport function isElementTabbable(element: HTMLElement, checkTabIndex?: boolean): boolean {\r\n  // If this element is null or is disabled, it is not considered tabbable.\r\n  if (!element || (element as HTMLButtonElement).disabled) {\r\n    return false;\r\n  }\r\n\r\n  let tabIndex = 0;\r\n  let tabIndexAttributeValue = null;\r\n\r\n  if (element && element.getAttribute) {\r\n    tabIndexAttributeValue = element.getAttribute('tabIndex');\r\n\r\n    if (tabIndexAttributeValue) {\r\n      tabIndex = parseInt(tabIndexAttributeValue, 10);\r\n    }\r\n  }\r\n\r\n  let isFocusableAttribute = element.getAttribute ? element.getAttribute(IS_FOCUSABLE_ATTRIBUTE) : null;\r\n  let isTabIndexSet = tabIndexAttributeValue !== null && tabIndex >= 0;\r\n\r\n  const result =\r\n    !!element &&\r\n    isFocusableAttribute !== 'false' &&\r\n    (element.tagName === 'A' ||\r\n      element.tagName === 'BUTTON' ||\r\n      element.tagName === 'INPUT' ||\r\n      element.tagName === 'TEXTAREA' ||\r\n      isFocusableAttribute === 'true' ||\r\n      isTabIndexSet ||\r\n      (element.getAttribute && element.getAttribute('role') === 'button'));\r\n\r\n  return checkTabIndex ? tabIndex !== -1 && result : result;\r\n}\r\n\r\n/**\r\n * Determines if a given element is a focus zone.\r\n *\r\n * @public\r\n */\r\nexport function isElementFocusZone(element?: HTMLElement): boolean {\r\n  return !!(element && element.getAttribute && !!element.getAttribute(FOCUSZONE_ID_ATTRIBUTE));\r\n}\r\n\r\n/**\r\n * Determines if a given element is a focus sub zone.\r\n *\r\n * @public\r\n */\r\nexport function isElementFocusSubZone(element?: HTMLElement): boolean {\r\n  return !!(element && element.getAttribute && element.getAttribute(FOCUSZONE_SUB_ATTRIBUTE) === 'true');\r\n}\r\n\r\n/**\r\n * Determines if an element, or any of its children, contain focus.\r\n *\r\n * @public\r\n */\r\nexport function doesElementContainFocus(element: HTMLElement): boolean {\r\n  let document = getDocument(element);\r\n  let currentActiveElement: HTMLElement | undefined = document && (document.activeElement as HTMLElement);\r\n  if (currentActiveElement && elementContains(element, currentActiveElement)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Determines if an, or any of its ancestors, sepcificies that it doesn't want focus to wrap\r\n * @param element - element to start searching from\r\n * @param noWrapDataAttribute - the no wrap data attribute to match (either)\r\n * @returns true if focus should wrap, false otherwise\r\n */\r\nexport function shouldWrapFocus(element: HTMLElement, noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap'): boolean {\r\n  return elementContainsAttribute(element, noWrapDataAttribute) === 'true' ? false : true;\r\n}\r\n\r\nlet targetToFocusOnNextRepaint: HTMLElement | { focus: () => void } | null | undefined = undefined;\r\n\r\n/**\r\n * Sets focus to an element asynchronously. The focus will be set at the next browser repaint,\r\n * meaning it won't cause any extra recalculations. If more than one focusAsync is called during one frame,\r\n * only the latest called focusAsync element will actually be focused\r\n * @param element - The element to focus\r\n */\r\nexport function focusAsync(element: HTMLElement | { focus: () => void } | undefined | null): void {\r\n  if (element) {\r\n    // An element was already queued to be focused, so replace that one with the new element\r\n    if (targetToFocusOnNextRepaint) {\r\n      targetToFocusOnNextRepaint = element;\r\n      return;\r\n    }\r\n\r\n    targetToFocusOnNextRepaint = element;\r\n\r\n    const win = getWindow(element as Element);\r\n\r\n    if (win) {\r\n      // element.focus() is a no-op if the element is no longer in the DOM, meaning this is always safe\r\n      win.requestAnimationFrame(() => {\r\n        targetToFocusOnNextRepaint && targetToFocusOnNextRepaint.focus();\r\n\r\n        // We are done focusing for this frame, so reset the queued focus element\r\n        targetToFocusOnNextRepaint = undefined;\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}