{"version":3,"file":"Customizations.js","sourceRoot":"../src/","sources":["Customizations.ts"],"names":[],"mappings":";;;IAaA,IAAM,uBAAuB,GAAG,gBAAgB,CAAC;IACjD,IAAM,iBAAiB,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE,cAAc,EAAE,EAAE,EAAE,mBAAmB,EAAE,KAAK,EAAE,CAAC;IAE3F,IAAI,YAAY,GAAG,+BAAc,CAAC,QAAQ,CAAkB,uBAAuB,EAAE;QACnF,QAAQ,EAAE,EAAE;QACZ,cAAc,EAAE,EAAE;QAClB,mBAAmB,EAAE,KAAK;KAC3B,CAAC,CAAC;IAEH,IAAM,OAAO,GAAG,IAAI,uBAAU,CAAC,YAAY,CAAC,CAAC;IAE7C;QAAA;QAmDA,CAAC;QAlDe,oBAAK,GAAnB;YACE,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;YAC3B,YAAY,CAAC,cAAc,GAAG,EAAE,CAAC;QACnC,CAAC;QAED,kCAAkC;QACpB,4BAAa,GAA3B,UAA4B,QAAkB;YAC5C,YAAY,CAAC,QAAQ,wBAAQ,YAAY,CAAC,QAAQ,EAAK,QAAQ,CAAE,CAAC;YAClE,cAAc,CAAC,YAAY,EAAE,CAAC;QAChC,CAAC;QAED,kCAAkC;QACpB,kCAAmB,GAAjC,UAAkC,SAAiB,EAAE,QAAkB;YACrE,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,wBAAQ,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,EAAK,QAAQ,CAAE,CAAC;YACpG,cAAc,CAAC,YAAY,EAAE,CAAC;QAChC,CAAC;QAEa,0BAAW,GAAzB,UACE,UAAoB,EACpB,SAAkB,EAClB,aAAkD;QAClD,kCAAkC;;YADlC,8BAAA,EAAA,iCAAkD;YAGlD,kCAAkC;YAClC,IAAM,QAAQ,GAAa,EAAE,CAAC;YAC9B,IAAM,mBAAmB,GAAG,CAAC,SAAS,IAAI,aAAa,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;YACzF,IAAM,oBAAoB,GAAG,CAAC,SAAS,IAAI,YAAY,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC;YAEzF,KAAqB,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;gBAA1B,IAAI,QAAQ,mBAAA;gBACf,QAAQ,CAAC,QAAQ,CAAC;oBAChB,mBAAmB,CAAC,QAAQ,CAAC;wBAC7B,aAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBAChC,oBAAoB,CAAC,QAAQ,CAAC;wBAC9B,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACnC;YAED,OAAO,QAAQ,CAAC;QAClB,CAAC;QAEa,sBAAO,GAArB,UAAsB,QAAoB;YACxC,OAAO,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC/C,CAAC;QAEa,wBAAS,GAAvB,UAAwB,QAAoB;YAC1C,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAChD,CAAC;QAEc,2BAAY,GAA3B;YACE,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;QACH,qBAAC;IAAD,CAAC,AAnDD,IAmDC;IAnDY,wCAAc","sourcesContent":["import { GlobalSettings } from './GlobalSettings';\r\nimport { EventGroup } from './EventGroup';\r\n\r\n// tslint:disable-next-line:no-any\r\nexport type Settings = { [key: string]: any };\r\nexport type SettingsFunction = (settings: Settings) => Settings;\r\n\r\nexport interface ICustomizations {\r\n  settings: Settings;\r\n  scopedSettings: { [key: string]: Settings };\r\n  inCustomizerContext?: boolean;\r\n}\r\n\r\nconst CustomizationsGlobalKey = 'customizations';\r\nconst NO_CUSTOMIZATIONS = { settings: {}, scopedSettings: {}, inCustomizerContext: false };\r\n\r\nlet _allSettings = GlobalSettings.getValue<ICustomizations>(CustomizationsGlobalKey, {\r\n  settings: {},\r\n  scopedSettings: {},\r\n  inCustomizerContext: false\r\n});\r\n\r\nconst _events = new EventGroup(_allSettings);\r\n\r\nexport class Customizations {\r\n  public static reset(): void {\r\n    _allSettings.settings = {};\r\n    _allSettings.scopedSettings = {};\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public static applySettings(settings: Settings): void {\r\n    _allSettings.settings = { ..._allSettings.settings, ...settings };\r\n    Customizations._raiseChange();\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  public static applyScopedSettings(scopeName: string, settings: Settings): void {\r\n    _allSettings.scopedSettings[scopeName] = { ..._allSettings.scopedSettings[scopeName], ...settings };\r\n    Customizations._raiseChange();\r\n  }\r\n\r\n  public static getSettings(\r\n    properties: string[],\r\n    scopeName?: string,\r\n    localSettings: ICustomizations = NO_CUSTOMIZATIONS\r\n    // tslint:disable-next-line:no-any\r\n  ): any {\r\n    // tslint:disable-next-line:no-any\r\n    const settings: Settings = {};\r\n    const localScopedSettings = (scopeName && localSettings.scopedSettings[scopeName]) || {};\r\n    const globalScopedSettings = (scopeName && _allSettings.scopedSettings[scopeName]) || {};\r\n\r\n    for (let property of properties) {\r\n      settings[property] =\r\n        localScopedSettings[property] ||\r\n        localSettings.settings[property] ||\r\n        globalScopedSettings[property] ||\r\n        _allSettings.settings[property];\r\n    }\r\n\r\n    return settings;\r\n  }\r\n\r\n  public static observe(onChange: () => void): void {\r\n    _events.on(_allSettings, 'change', onChange);\r\n  }\r\n\r\n  public static unobserve(onChange: () => void): void {\r\n    _events.off(_allSettings, 'change', onChange);\r\n  }\r\n\r\n  private static _raiseChange(): void {\r\n    _events.raise('change');\r\n  }\r\n}\r\n"]}