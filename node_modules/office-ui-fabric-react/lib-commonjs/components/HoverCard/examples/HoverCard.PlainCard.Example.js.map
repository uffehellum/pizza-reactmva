{"version":3,"file":"HoverCard.PlainCard.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.PlainCard.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,kEAAqE;AACrE,kEAAiG;AACjG,sEAA4F;AAC5F,gFAAmF;AACnF,oCAAkC;AAClC,0DAAmE;AACnE,0DAAsE;AAEtE,IAAI,MAAa,CAAC;AAOlB;IAA+C,qDAAyC;IACtF,mCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAQb;QAeO,yBAAmB,GAAG,UAAC,IAAS,EAAE,KAAa,EAAE,MAAe;YACtE,IAAM,cAAc,GAAoB;gBACtC,iBAAiB,EAAE,KAAI,CAAC,kBAAkB;gBAC1C,UAAU,EAAE,IAAI;aACjB,CAAC;YAEF,IAAI,MAAM,CAAC,GAAG,KAAK,OAAO,EAAE;gBAC1B,OAAO,CACL,oBAAC,qBAAS,IAAC,EAAE,EAAC,OAAO,EAAC,cAAc,EAAE,cAAc,EAAE,kBAAkB,EAAE,IAAI,EAAE,IAAI,EAAE,yBAAa,CAAC,KAAK;oBACvG,6BAAK,SAAS,EAAC,gBAAgB,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IACzD,IAAI,CAAC,KAAK,CACP,CACI,CACb,CAAC;aACH;YAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEM,wBAAkB,GAAG,UAAC,IAAS;YACrC,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,IAAG,MAAI,0BAAkB,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC,GAAK,CAAA,CAAC;YAEvE,OAAO,oBAAC,aAAK,IAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,gBAAQ,CAAC,KAAK,GAAI,CAAC;QAC/F,CAAC,CAAC;QA5CA,MAAM,GAAG,MAAM,IAAI,6BAAe,CAAC,EAAE,CAAC,CAAC;QAEvC,KAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,aAAa,EAAE;SACzB,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QACQ,IAAA,eAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;QAEtC,OAAO,CACL;YACE;;gBACiB,uCAAY;uDACzB;YACJ,oBAAC,yBAAW,IAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAE,KAAM,EAAE,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,GAAI,CAC5G,CACP,CAAC;IACJ,CAAC;IA0BH,gCAAC;AAAD,CAAC,AAjDD,CAA+C,yBAAa,GAiD3D;AAjDY,8DAAyB;AAmDtC;IACE,OAAO,0BAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAA9E,CAA8E,CAAC,CAAC;AAC/H,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { HoverCard, IPlainCardProps, HoverCardType } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { createListItems } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport './HoverCard.Example.scss';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { getColorFromString } from 'office-ui-fabric-react/lib/Color';\r\n\r\nlet _items: any[];\r\n\r\nexport interface IHoverCardExampleState {\r\n  items?: any[];\r\n  columns?: IColumn[];\r\n}\r\n\r\nexport class HoverCardPlainCardExample extends BaseComponent<{}, IHoverCardExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    _items = _items || createListItems(10);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      columns: _buildColumns()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { items, columns } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          Hover over the <i>color</i> cell of a row item to see the card.\r\n        </p>\r\n        <DetailsList setKey=\"hoverSet\" items={items!} columns={columns} onRenderItemColumn={this._onRenderItemColumn} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderItemColumn = (item: any, index: number, column: IColumn): JSX.Element => {\r\n    const plainCardProps: IPlainCardProps = {\r\n      onRenderPlainCard: this._onRenderPlainCard,\r\n      renderData: item\r\n    };\r\n\r\n    if (column.key === 'color') {\r\n      return (\r\n        <HoverCard id=\"myID1\" plainCardProps={plainCardProps} instantOpenOnClick={true} type={HoverCardType.plain}>\r\n          <div className=\"HoverCard-item\" style={{ color: item.color }}>\r\n            {item.color}\r\n          </div>\r\n        </HoverCard>\r\n      );\r\n    }\r\n\r\n    return item[column.key];\r\n  };\r\n\r\n  private _onRenderPlainCard = (item: any): JSX.Element => {\r\n    const src = item.thumbnail + `/${getColorFromString(item.color)!.hex}`;\r\n\r\n    return <Image src={src} width={item.width} height={item.height} imageFit={ImageFit.cover} />;\r\n  };\r\n}\r\n\r\nfunction _buildColumns() {\r\n  return buildColumns(_items).filter(column => column.name === 'color' || column.name === 'width' || column.name === 'height');\r\n}\r\n"]}