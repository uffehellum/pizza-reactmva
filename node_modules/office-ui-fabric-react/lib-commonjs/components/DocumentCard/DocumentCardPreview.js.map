{"version":3,"file":"DocumentCardPreview.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardPreview.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { IDocumentCardPreviewProps, IDocumentCardPreviewImage } from './DocumentCard.types';\r\nimport { Image } from '../../Image';\r\nimport { Icon } from '../../Icon';\r\nimport { Link } from '../../Link';\r\nimport { BaseComponent, css } from '../../Utilities';\r\nimport * as stylesImport from './DocumentCard.scss';\r\nconst styles: any = stylesImport;\r\n\r\nconst LIST_ITEM_COUNT = 3;\r\n\r\nexport class DocumentCardPreview extends BaseComponent<IDocumentCardPreviewProps, any> {\r\n  public render(): JSX.Element {\r\n    const { previewImages } = this.props;\r\n    let style, preview;\r\n    let isFileList = false;\r\n\r\n    if (previewImages.length > 1) {\r\n      // Render a list of files\r\n      preview = this._renderPreviewList(previewImages);\r\n      isFileList = true;\r\n    } else if (previewImages.length === 1) {\r\n      // Render a single preview\r\n      preview = this._renderPreviewImage(previewImages[0]);\r\n\r\n      // Override the border color if an accent color was provided\r\n      if (previewImages[0].accentColor) {\r\n        style = {\r\n          borderBottomColor: previewImages[0].accentColor\r\n        };\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className={css('ms-DocumentCardPreview', styles.preview, isFileList && 'is-fileList ' + styles.previewIsFileList)} style={style}>\r\n        {preview}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderPreviewImage(previewImage: IDocumentCardPreviewImage): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> {\r\n    const { width, height, imageFit, previewIconProps, previewIconContainerClass } = previewImage;\r\n    const iconContainerClass = previewIconContainerClass ? previewIconContainerClass : 'ms-DocumentCardPreview-iconContainer';\r\n\r\n    if (previewIconProps) {\r\n      return (\r\n        <div className={css(iconContainerClass, styles.previewIconContainer)} style={{ width: width, height: height }}>\r\n          <Icon {...previewIconProps} />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const image = <Image width={width} height={height} imageFit={imageFit} src={previewImage.previewImageSrc} role=\"presentation\" alt=\"\" />;\r\n\r\n    let icon;\r\n    if (previewImage.iconSrc) {\r\n      icon = <Image className={css('ms-DocumentCardPreview-icon', styles.icon)} src={previewImage.iconSrc} role=\"presentation\" alt=\"\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {image}\r\n        {icon}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderPreviewList = (previewImages: IDocumentCardPreviewImage[]): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> => {\r\n    const { getOverflowDocumentCountText } = this.props;\r\n\r\n    // Determine how many documents we won't be showing\r\n    const overflowDocumentCount = previewImages.length - LIST_ITEM_COUNT;\r\n\r\n    // Determine the overflow text that will be rendered after the preview list.\r\n    const overflowText = overflowDocumentCount\r\n      ? getOverflowDocumentCountText\r\n        ? getOverflowDocumentCountText(overflowDocumentCount)\r\n        : '+' + overflowDocumentCount\r\n      : null;\r\n\r\n    // Create list items for the documents to be shown\r\n    const fileListItems = previewImages.slice(0, LIST_ITEM_COUNT).map((file, fileIndex) => (\r\n      <li key={fileIndex}>\r\n        <Image\r\n          className={css('ms-DocumentCardPreview-fileListIcon', styles.fileListIcon)}\r\n          src={file.iconSrc}\r\n          role=\"presentation\"\r\n          alt=\"\"\r\n          width=\"16px\"\r\n          height=\"16px\"\r\n        />\r\n        <Link {...(file.linkProps, { href: file.url || (file.linkProps && file.linkProps.href) })}>{file.name}</Link>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <ul className={css('ms-DocumentCardPreview-fileList', styles.fileList)}>{fileListItems}</ul>\r\n        {overflowText && <span className={css('ms-DocumentCardPreview-fileListMore', styles.fileListMore)}>{overflowText}</span>}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n"]}