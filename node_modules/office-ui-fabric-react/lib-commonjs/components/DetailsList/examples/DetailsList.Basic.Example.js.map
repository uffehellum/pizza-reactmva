{"version":3,"file":"DetailsList.Basic.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { DetailsList, DetailsListLayoutMode, Selection, IColumn, IDetailsList } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\n\r\nconst _items: any[] = [];\r\n\r\nconst _columns: IColumn[] = [\r\n  {\r\n    key: 'column1',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for name'\r\n  },\r\n  {\r\n    key: 'column2',\r\n    name: 'Value',\r\n    fieldName: 'value',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  }\r\n];\r\n\r\nexport class DetailsListBasicExample extends React.Component<\r\n  {},\r\n  {\r\n    items: {}[];\r\n    selectionDetails: {};\r\n    showItemIndexInView: boolean;\r\n  }\r\n> {\r\n  private _selection: Selection;\r\n  private _detailsList = React.createRef<IDetailsList>();\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    // Populate with items for demos.\r\n    if (_items.length === 0) {\r\n      for (let i = 0; i < 200; i++) {\r\n        _items.push({\r\n          key: i,\r\n          name: 'Item ' + i,\r\n          value: i\r\n        });\r\n      }\r\n    }\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this.state = {\r\n      items: _items,\r\n      selectionDetails: this._getSelectionDetails(),\r\n      showItemIndexInView: false\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>{selectionDetails}</div>\r\n        <div>\r\n          <Checkbox\r\n            label=\"Show index of the first item in view when unmounting\"\r\n            checked={this.state.showItemIndexInView}\r\n            onChange={this._onShowItemIndexInViewChanged}\r\n          />\r\n        </div>\r\n        <TextField label=\"Filter by name:\" onChange={this._onChange} />\r\n        <MarqueeSelection selection={this._selection}>\r\n          <DetailsList\r\n            componentRef={this._detailsList}\r\n            items={items}\r\n            columns={_columns}\r\n            setKey=\"set\"\r\n            layoutMode={DetailsListLayoutMode.fixedColumns}\r\n            selection={this._selection}\r\n            selectionPreservedOnEmptyClick={true}\r\n            ariaLabelForSelectionColumn=\"Toggle selection\"\r\n            ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n            onItemInvoked={this._onItemInvoked}\r\n          />\r\n        </MarqueeSelection>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.showItemIndexInView) {\r\n      const itemIndexInView = this._detailsList!.current!.getStartItemIndexInView();\r\n      alert('unmounting, getting first item index that was in view: ' + itemIndexInView);\r\n    }\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    const selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n\r\n  private _onChange = (ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, text: string): void => {\r\n    this.setState({ items: text ? _items.filter(i => i.name.toLowerCase().indexOf(text) > -1) : _items });\r\n  };\r\n\r\n  private _onItemInvoked(item: any): void {\r\n    alert(`Item invoked: ${item.name}`);\r\n  }\r\n\r\n  private _onShowItemIndexInViewChanged = (event: React.FormEvent<HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({\r\n      showItemIndexInView: checked\r\n    });\r\n  };\r\n}\r\n"]}