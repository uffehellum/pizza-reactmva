{"version":3,"file":"DetailsList.CustomColumns.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.CustomColumns.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { createListItems } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\r\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\n\r\nlet _items: any[];\r\n\r\nexport interface IDetailsListCustomColumnsExampleState {\r\n  sortedItems?: any[];\r\n  columns?: IColumn[];\r\n}\r\n\r\nexport class DetailsListCustomColumnsExample extends React.Component<{}, IDetailsListCustomColumnsExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    _items = _items || createListItems(500);\r\n\r\n    this.state = {\r\n      sortedItems: _items,\r\n      columns: _buildColumns()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { sortedItems, columns } = this.state;\r\n\r\n    return (\r\n      <DetailsList\r\n        items={sortedItems as any[]}\r\n        setKey=\"set\"\r\n        columns={columns}\r\n        onRenderItemColumn={_renderItemColumn}\r\n        onColumnHeaderClick={this._onColumnClick}\r\n        onItemInvoked={this._onItemInvoked}\r\n        onColumnHeaderContextMenu={this._onColumnHeaderContextMenu}\r\n        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onColumnClick = (event: React.MouseEvent<HTMLElement>, column: IColumn): void => {\r\n    const { columns } = this.state;\r\n    let { sortedItems } = this.state;\r\n    let isSortedDescending = column.isSortedDescending;\r\n\r\n    // If we've sorted this column, flip it.\r\n    if (column.isSorted) {\r\n      isSortedDescending = !isSortedDescending;\r\n    }\r\n\r\n    // Sort the items.\r\n    sortedItems = sortedItems!.concat([]).sort((a, b) => {\r\n      const firstValue = a[column.fieldName || ''];\r\n      const secondValue = b[column.fieldName || ''];\r\n\r\n      if (isSortedDescending) {\r\n        return firstValue > secondValue ? -1 : 1;\r\n      } else {\r\n        return firstValue > secondValue ? 1 : -1;\r\n      }\r\n    });\r\n\r\n    // Reset the items and columns to match the state.\r\n    this.setState({\r\n      sortedItems: sortedItems,\r\n      columns: columns!.map(col => {\r\n        col.isSorted = col.key === column.key;\r\n\r\n        if (col.isSorted) {\r\n          col.isSortedDescending = isSortedDescending;\r\n        }\r\n\r\n        return col;\r\n      })\r\n    });\r\n  };\r\n\r\n  private _onColumnHeaderContextMenu(column: IColumn | undefined, ev: React.MouseEvent<HTMLElement> | undefined): void {\r\n    console.log(`column ${column!.key} contextmenu opened.`);\r\n  }\r\n\r\n  private _onItemInvoked(item: any, index: number | undefined): void {\r\n    alert(`Item ${item.name} at index ${index} has been invoked.`);\r\n  }\r\n}\r\n\r\nfunction _buildColumns() {\r\n  const columns = buildColumns(_items);\r\n\r\n  const thumbnailColumn = columns.filter(column => column.name === 'thumbnail')[0];\r\n\r\n  // Special case one column's definition.\r\n  thumbnailColumn.name = '';\r\n  thumbnailColumn.maxWidth = 50;\r\n\r\n  return columns;\r\n}\r\n\r\nfunction _renderItemColumn(item: any, index: number, column: IColumn) {\r\n  const fieldContent = item[column.fieldName || ''];\r\n\r\n  switch (column.key) {\r\n    case 'thumbnail':\r\n      return <Image src={fieldContent} width={50} height={50} imageFit={ImageFit.cover} />;\r\n\r\n    case 'name':\r\n      return <Link href=\"#\">{fieldContent}</Link>;\r\n\r\n    case 'color':\r\n      return (\r\n        <span data-selection-disabled={true} style={{ color: fieldContent, height: '100%', display: 'block' }}>\r\n          {fieldContent}\r\n        </span>\r\n      );\r\n\r\n    default:\r\n      return <span>{fieldContent}</span>;\r\n  }\r\n}\r\n"]}