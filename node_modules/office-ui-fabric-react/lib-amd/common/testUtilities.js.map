{"version":3,"file":"testUtilities.js","sourceRoot":"../src/","sources":["common/testUtilities.ts"],"names":[],"mappings":";;;IAKa,QAAA,SAAS,GAAG,UAAC,OAA+B,EAAE,SAAiB;QAC1E,OAAA,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,UAAC,IAA4B,IAAK,OAAA,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,QAAQ,EAA/B,CAA+B,CAAC;IAAtG,CAAsG,CAAC;IAE5F,QAAA,WAAW,GAAG,UAAC,OAA+B,EAAE,SAAiB,EAAE,CAAS;QACvF,OAAA,MAAM,CAAC,iBAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAAvD,CAAuD,CAAC;IAE7C,QAAA,SAAS,GAAG,UAAC,OAA+B,EAAE,SAAiB,IAAW,OAAA,mBAAW,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,EAAlC,CAAkC,CAAC;IAE7G,QAAA,aAAa,GAAG,UAAC,OAA+B,EAAE,SAAiB,IAAW,OAAA,mBAAW,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,EAAlC,CAAkC,CAAC","sourcesContent":["import { ReactWrapper } from 'enzyme';\r\nimport { Component } from 'react';\r\n\r\nexport type __TS_2_8_WORKAROUND_COMPONENT__ = Component;\r\n\r\nexport const findNodes = (wrapper: ReactWrapper<any, any>, className: string): ReactWrapper<any, any> =>\r\n  wrapper.find(className).filterWhere((node: ReactWrapper<any, any>) => typeof node.type() === 'string');\r\n\r\nexport const expectNodes = (wrapper: ReactWrapper<any, any>, className: string, n: number): void =>\r\n  expect(findNodes(wrapper, className).length).toEqual(n);\r\n\r\nexport const expectOne = (wrapper: ReactWrapper<any, any>, className: string): void => expectNodes(wrapper, className, 1);\r\n\r\nexport const expectMissing = (wrapper: ReactWrapper<any, any>, className: string): void => expectNodes(wrapper, className, 0);\r\n"]}