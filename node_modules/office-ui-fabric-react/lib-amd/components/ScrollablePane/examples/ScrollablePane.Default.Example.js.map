{"version":3,"file":"ScrollablePane.Default.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.Default.Example.tsx"],"names":[],"mappings":";;;IAMA,IAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAEnH;QAAkD,wDAAe;QAAjE;;QAyCA,CAAC;QAxCQ,6CAAM,GAAb;YACE,IAAM,YAAY,GAAkB,EAAE,CAAC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/C;YAED,OAAO,CACL,6BACE,KAAK,EAAE;oBACL,MAAM,EAAE,OAAO;oBACf,QAAQ,EAAE,UAAU;oBACpB,SAAS,EAAE,SAAS;iBACrB;gBAED,oBAAC,+BAAc,IAAC,SAAS,EAAC,8BAA8B,IACrD,YAAY,CAAC,GAAG,CAAC,UAAA,GAAG;oBACnB,OAAO,GAAG,CAAC;gBACb,CAAC,CAAC,CACa,CACb,CACP,CAAC;QACJ,CAAC;QAEO,yDAAkB,GAA1B,UAA2B,KAAa;YACtC,IAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7E,OAAO,CACL,6BACE,GAAG,EAAE,KAAK,EACV,KAAK,EAAE;oBACL,eAAe,EAAE,KAAK;iBACvB;gBAED,oBAAC,eAAM,IAAC,cAAc,EAAE,2BAAkB,CAAC,IAAI;oBAC7C,6BAAK,SAAS,EAAC,QAAQ;;wBAAoB,KAAK,GAAG,CAAC,CAAO,CACpD;gBACT,6BAAK,SAAS,EAAC,aAAa,IAAE,mBAAK,CAAC,GAAG,CAAC,CAAO,CAC3C,CACP,CAAC;QACJ,CAAC;QACH,mCAAC;IAAD,CAAC,AAzCD,CAAkD,KAAK,CAAC,SAAS,GAyChE;IAzCY,oEAA4B","sourcesContent":["import * as React from 'react';\r\nimport { ScrollablePane } from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\r\nimport { lorem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport './ScrollablePane.Example.scss';\r\n\r\nconst colors = ['#eaeaea', '#dadada', '#d0d0d0', '#c8c8c8', '#a6a6a6', '#c7e0f4', '#71afe5', '#eff6fc', '#deecf9'];\r\n\r\nexport class ScrollablePaneDefaultExample extends React.Component {\r\n  public render() {\r\n    const contentAreas: JSX.Element[] = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      contentAreas.push(this._createContentArea(i));\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '900px',\r\n          position: 'relative',\r\n          maxHeight: 'inherit'\r\n        }}\r\n      >\r\n        <ScrollablePane className=\"scrollablePaneDefaultExample\">\r\n          {contentAreas.map(ele => {\r\n            return ele;\r\n          })}\r\n        </ScrollablePane>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _createContentArea(index: number) {\r\n    const color = colors.splice(Math.floor(Math.random() * colors.length), 1)[0];\r\n\r\n    return (\r\n      <div\r\n        key={index}\r\n        style={{\r\n          backgroundColor: color\r\n        }}\r\n      >\r\n        <Sticky stickyPosition={StickyPositionType.Both}>\r\n          <div className=\"sticky\">Sticky Component #{index + 1}</div>\r\n        </Sticky>\r\n        <div className=\"textContent\">{lorem(200)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}