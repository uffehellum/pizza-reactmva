{"version":3,"file":"ScrollablePane.DetailsList.Example.js","sourceRoot":"../src/","sources":["components/ScrollablePane/examples/ScrollablePane.DetailsList.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport {\r\n  DetailsList,\r\n  DetailsListLayoutMode,\r\n  IDetailsHeaderProps,\r\n  Selection,\r\n  IColumn,\r\n  ConstrainMode,\r\n  IDetailsFooterProps,\r\n  DetailsRow\r\n} from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { IRenderFunction, createRef } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { TooltipHost, ITooltipHostProps } from 'office-ui-fabric-react/lib/Tooltip';\r\nimport { ScrollablePane, IScrollablePane, ScrollbarVisibility } from 'office-ui-fabric-react/lib/ScrollablePane';\r\nimport { Sticky, StickyPositionType } from 'office-ui-fabric-react/lib/Sticky';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { lorem } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport { SelectionMode } from 'office-ui-fabric-react/lib/utilities/selection/index';\r\n\r\nconst _columns: IColumn[] = [\r\n  {\r\n    key: 'column1',\r\n    name: 'Test 1',\r\n    fieldName: 'test1',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for name'\r\n  },\r\n  {\r\n    key: 'column2',\r\n    name: 'Test 2',\r\n    fieldName: 'test2',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  },\r\n  {\r\n    key: 'column3',\r\n    name: 'Test 3',\r\n    fieldName: 'test3',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  },\r\n  {\r\n    key: 'column4',\r\n    name: 'Test 4',\r\n    fieldName: 'test4',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  },\r\n  {\r\n    key: 'column5',\r\n    name: 'Test 4',\r\n    fieldName: 'test5',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  },\r\n  {\r\n    key: 'column6',\r\n    name: 'Test 6',\r\n    fieldName: 'test6',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true,\r\n    ariaLabel: 'Operations for value'\r\n  }\r\n];\r\n\r\ninterface IItem {\r\n  key: number;\r\n  test1: string;\r\n  test2: string;\r\n  test3: string;\r\n  test4: string;\r\n  test5: string;\r\n  test6: string;\r\n}\r\n\r\nexport class ScrollablePaneDetailsListExample extends React.Component<\r\n  {},\r\n  {\r\n    items: {}[];\r\n    selectionDetails: string;\r\n  }\r\n> {\r\n  private _scrollablePane = createRef<IScrollablePane>();\r\n  private _selection: Selection;\r\n  private readonly _items: IItem[];\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    const items: IItem[] = [];\r\n\r\n    // Populate with items for demos.\r\n    for (let i = 0; i < 200; i++) {\r\n      items.push({\r\n        key: i,\r\n        test1: lorem(2),\r\n        test2: lorem(2),\r\n        test3: lorem(2),\r\n        test4: lorem(2),\r\n        test5: lorem(2),\r\n        test6: lorem(2)\r\n      });\r\n    }\r\n\r\n    this._items = items;\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => this.setState({ selectionDetails: this._getSelectionDetails() })\r\n    });\r\n\r\n    this.state = {\r\n      items: items,\r\n      selectionDetails: this._getSelectionDetails()\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items, selectionDetails } = this.state;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          height: '80vh',\r\n          position: 'relative'\r\n        }}\r\n      >\r\n        <ScrollablePane componentRef={this._scrollablePane} scrollbarVisibility={ScrollbarVisibility.auto}>\r\n          <Sticky stickyPosition={StickyPositionType.Header}>{selectionDetails}</Sticky>\r\n          <TextField\r\n            label=\"Filter by name:\"\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onChange={(ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, text: string) =>\r\n              this.setState({\r\n                items: text ? this._items.filter((item: IItem) => hasText(item, text)) : this._items\r\n              })\r\n            }\r\n          />\r\n          <Sticky stickyPosition={StickyPositionType.Header}>\r\n            <h1 style={{ margin: '0px' }}>Item List</h1>\r\n          </Sticky>\r\n          <MarqueeSelection selection={this._selection}>\r\n            <DetailsList\r\n              items={items}\r\n              columns={_columns}\r\n              setKey=\"set\"\r\n              layoutMode={DetailsListLayoutMode.fixedColumns}\r\n              constrainMode={ConstrainMode.unconstrained}\r\n              onRenderDetailsHeader={onRenderDetailsHeader}\r\n              onRenderDetailsFooter={onRenderDetailsFooter}\r\n              selection={this._selection}\r\n              selectionPreservedOnEmptyClick={true}\r\n              ariaLabelForSelectionColumn=\"Toggle selection\"\r\n              ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n              // tslint:disable-next-line:jsx-no-lambda\r\n              onItemInvoked={item => alert(`Item invoked: ${item.name}`)}\r\n            />\r\n          </MarqueeSelection>\r\n        </ScrollablePane>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getSelectionDetails(): string {\r\n    const selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return 'No items selected';\r\n      case 1:\r\n        return '1 item selected: ' + (this._selection.getSelection()[0] as any).name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n}\r\n\r\nfunction onRenderDetailsHeader(props: IDetailsHeaderProps, defaultRender?: IRenderFunction<IDetailsHeaderProps>): JSX.Element {\r\n  return (\r\n    <Sticky stickyPosition={StickyPositionType.Header} isScrollSynced={true}>\r\n      {defaultRender!({\r\n        ...props,\r\n        onRenderColumnHeaderTooltip: (tooltipHostProps: ITooltipHostProps) => <TooltipHost {...tooltipHostProps} />\r\n      })}\r\n    </Sticky>\r\n  );\r\n}\r\n\r\nfunction onRenderDetailsFooter(props: IDetailsFooterProps, defaultRender?: IRenderFunction<IDetailsFooterProps>): JSX.Element {\r\n  return (\r\n    <Sticky stickyPosition={StickyPositionType.Footer} isScrollSynced={true}>\r\n      <div style={{ display: 'inline-block' }}>\r\n        <DetailsRow\r\n          columns={props.columns}\r\n          item={{\r\n            key: 'footer',\r\n            test1: 'Total 1',\r\n            test2: 'Total 2',\r\n            test3: 'Total 3',\r\n            test4: 'Total 4',\r\n            test5: 'Total 5',\r\n            test6: 'Total 6'\r\n          }}\r\n          itemIndex={-1}\r\n          selection={props.selection}\r\n          selectionMode={(props.selection && props.selection.mode) || SelectionMode.none}\r\n          viewport={props.viewport}\r\n        />\r\n      </div>\r\n    </Sticky>\r\n  );\r\n}\r\n\r\nfunction hasText(item: IItem, text: string): boolean {\r\n  return `${item.test1}|${item.test2}|${item.test3}|${item.test4}|${item.test5}|${item.test6}`.indexOf(text) > -1;\r\n}\r\n"]}