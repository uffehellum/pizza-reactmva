define(["require", "exports", "tslib", "react", "office-ui-fabric-react/lib/Utilities", "office-ui-fabric-react/lib/Tooltip"], function (require, exports, tslib_1, React, Utilities_1, Tooltip_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var TooltipDisplayExample = /** @class */ (function (_super) {
        tslib_1.__extends(TooltipDisplayExample, _super);
        function TooltipDisplayExample() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TooltipDisplayExample.prototype.render = function () {
            return (React.createElement("div", null,
                React.createElement("p", null, "In some cases when TooltipHost is wrapping inline-block or inline elements the positioning of the Tooltip may be off so it is recommended to modify the display property of the TooltipHost as in the following example."),
                React.createElement(Tooltip_1.TooltipHost, { content: "Incorrect positioning", id: "myID", calloutProps: { gapSpace: 0 } },
                    React.createElement("button", { style: { fontSize: '2em' }, "aria-describedby": "myID" }, "Hover Over Me")),
                ' ',
                React.createElement(Tooltip_1.TooltipHost, { content: "Correct positioning", styles: { root: { display: 'inline-block' } }, id: "myID", calloutProps: { gapSpace: 0 } },
                    React.createElement("button", { style: { fontSize: '2em' }, "aria-describedby": "myID" }, "Hover Over Me"))));
        };
        return TooltipDisplayExample;
    }(Utilities_1.BaseComponent));
    exports.TooltipDisplayExample = TooltipDisplayExample;
});
//# sourceMappingURL=Tooltip.Display.Example.js.map