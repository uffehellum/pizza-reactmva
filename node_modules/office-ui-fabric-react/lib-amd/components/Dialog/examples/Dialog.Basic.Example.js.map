{"version":3,"file":"Dialog.Basic.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.Basic.Example.tsx"],"names":[],"mappings":";;;IAKA;QAAwC,8CAKvC;QACC,4BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAKb;YAsCO,iBAAW,GAAG;gBACpB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YAEM,kBAAY,GAAG;gBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YA/CA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,IAAI;aACjB,CAAC;;QACJ,CAAC;QAEM,mCAAM,GAAb;YACE,OAAO,CACL;gBACE,oBAAC,sBAAa,IAAC,aAAa,EAAC,yBAAyB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,aAAa,GAAG;gBACvG,+BAAO,EAAE,EAAC,WAAW,EAAC,SAAS,EAAC,kBAAkB,sBAE1C;gBACR,+BAAO,EAAE,EAAC,aAAa,EAAC,SAAS,EAAC,kBAAkB,4BAE5C;gBAER,oBAAC,eAAM,IACL,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,EAC7B,SAAS,EAAE,IAAI,CAAC,YAAY,EAC5B,kBAAkB,EAAE;wBAClB,IAAI,EAAE,mBAAU,CAAC,MAAM;wBACvB,KAAK,EAAE,qBAAqB;wBAC5B,OAAO,EAAE,4GAA4G;qBACtH,EACD,UAAU,EAAE;wBACV,WAAW,EAAE,WAAW;wBACxB,cAAc,EAAE,aAAa;wBAC7B,UAAU,EAAE,KAAK;wBACjB,kBAAkB,EAAE,uBAAuB;qBAC5C;oBAEA,IAAI,CAAC,qEAAqE;oBAC3E,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,MAAM,GAAG;wBACzD,oBAAC,sBAAa,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,QAAQ,GAAG,CAC9C,CACR,CACL,CACP,CAAC;QACJ,CAAC;QASH,yBAAC;IAAD,CAAC,AAzDD,CAAwC,KAAK,CAAC,SAAS,GAyDtD;IAzDY,gDAAkB","sourcesContent":["import * as React from 'react';\r\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport './Dialog.Basic.Example.scss';\r\n\r\nexport class DialogBasicExample extends React.Component<\r\n  {},\r\n  {\r\n    hideDialog: boolean;\r\n  }\r\n> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      hideDialog: true\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div>\r\n        <DefaultButton secondaryText=\"Opens the Sample Dialog\" onClick={this._showDialog} text=\"Open Dialog\" />\r\n        <label id=\"myLabelId\" className=\"screenReaderOnly\">\r\n          My sample Label\r\n        </label>\r\n        <label id=\"mySubTextId\" className=\"screenReaderOnly\">\r\n          My Sample description\r\n        </label>\r\n\r\n        <Dialog\r\n          hidden={this.state.hideDialog}\r\n          onDismiss={this._closeDialog}\r\n          dialogContentProps={{\r\n            type: DialogType.normal,\r\n            title: 'All emails together',\r\n            subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\r\n          }}\r\n          modalProps={{\r\n            titleAriaId: 'myLabelId',\r\n            subtitleAriaId: 'mySubTextId',\r\n            isBlocking: false,\r\n            containerClassName: 'ms-dialogMainOverride'\r\n          }}\r\n        >\r\n          {null /** You can also include null values as the result of conditionals */}\r\n          <DialogFooter>\r\n            <PrimaryButton onClick={this._closeDialog} text=\"Save\" />\r\n            <DefaultButton onClick={this._closeDialog} text=\"Cancel\" />\r\n          </DialogFooter>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showDialog = (): void => {\r\n    this.setState({ hideDialog: false });\r\n  };\r\n\r\n  private _closeDialog = (): void => {\r\n    this.setState({ hideDialog: true });\r\n  };\r\n}\r\n"]}