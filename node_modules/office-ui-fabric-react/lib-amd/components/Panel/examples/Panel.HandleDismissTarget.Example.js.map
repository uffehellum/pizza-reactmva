{"version":3,"file":"Panel.HandleDismissTarget.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.HandleDismissTarget.Example.tsx"],"names":[],"mappings":";;;IAIA;QAAqD,2DAKpD;QACC,yCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAGb;YAwCO,4BAAsB,GAAG;gBAC/B,OAAO,CACL;oBACE,oBAAC,sBAAa,IAAC,OAAO,EAAE,KAAI,CAAC,aAAa,cAAyB,CAC/D,CACP,CAAC;YACJ,CAAC,CAAC;YAEM,mBAAa,GAAG;gBACtB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;YACtC,CAAC,CAAC;YApDA,KAAI,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;YAClC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QACrD,CAAC;QAEM,gDAAM,GAAb;YAAA,iBAoCC;YAnCC,OAAO,CACL;gBACE,oBAAC,sBAAa,IACZ,aAAa,EAAC,wBAAwB;oBACtC,yCAAyC;oBACzC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAlC,CAAkC,EACjD,IAAI,EAAC,YAAY,GACjB;gBACF,oBAAC,aAAK,IACJ,UAAU,EAAC,uDAAuD,EAClE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,IAAI,EAAE,iBAAS,CAAC,cAAc,EAC9B,gBAAgB,EAAE,IAAI;oBACtB,yCAAyC;oBACzC,SAAS,EAAE,UAAA,EAAE;wBACX,IAAI,CAAC,EAAE,EAAE;4BACP,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;4BAChC,OAAO;yBACR;wBAED,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;wBACxD,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE;4BACrG,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;yBACtC;wBACD,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,IAAI,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;4BACjG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;yBACjC;oBACH,CAAC,EACD,qBAAqB,EAAE,IAAI,CAAC,sBAAsB,EAClD,cAAc,EAAE,IAAI;oBAEpB,uDAA+B,CACzB,CACJ,CACP,CAAC;QACJ,CAAC;QAaH,sCAAC;IAAD,CAAC,AA7DD,CAAqD,KAAK,CAAC,SAAS,GA6DnE;IA7DY,0EAA+B","sourcesContent":["import { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport * as React from 'react';\r\n\r\nexport class PanelHandleDismissTargetExample extends React.Component<\r\n  {},\r\n  {\r\n    showPanel: boolean;\r\n  }\r\n> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { showPanel: false };\r\n    this._onClosePanel = this._onClosePanel.bind(this);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          secondaryText=\"Opens the Sample Panel\"\r\n          // tslint:disable-next-line:jsx-no-lambda\r\n          onClick={() => this.setState({ showPanel: true })}\r\n          text=\"Open Panel\"\r\n        />\r\n        <Panel\r\n          headerText=\"Panel - Handle close button clicks or light dismissal\"\r\n          isOpen={this.state.showPanel}\r\n          type={PanelType.smallFixedNear}\r\n          isFooterAtBottom={true}\r\n          // tslint:disable-next-line:jsx-no-lambda\r\n          onDismiss={ev => {\r\n            if (!ev) {\r\n              console.log('Panel dismissed.');\r\n              return;\r\n            }\r\n\r\n            console.log('Close button clicked or light dismissed.');\r\n            if (ev.nativeEvent.srcElement && ev.nativeEvent.srcElement.className.indexOf('ms-Button-icon') !== -1) {\r\n              console.log('Close button clicked.');\r\n            }\r\n            if (ev.nativeEvent.srcElement && ev.nativeEvent.srcElement.className.indexOf('ms-Overlay') !== -1) {\r\n              console.log('Light dismissed.');\r\n            }\r\n          }}\r\n          onRenderFooterContent={this._onRenderFooterContent}\r\n          isLightDismiss={true}\r\n        >\r\n          <span>Content goes here.</span>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderFooterContent = (): JSX.Element => {\r\n    return (\r\n      <div>\r\n        <DefaultButton onClick={this._onClosePanel}>Dismiss</DefaultButton>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _onClosePanel = () => {\r\n    this.setState({ showPanel: false });\r\n  };\r\n}\r\n"]}