{"version":3,"file":"DocumentCardActivity.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardActivity.tsx"],"names":[],"mappings":";;;IAMA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEjC;QAA0C,gDAA8C;QAAxF;;QAyDA,CAAC;QAxDQ,qCAAM,GAAb;YACQ,IAAA,eAAiC,EAA/B,sBAAQ,EAAE,kBAAM,CAAgB;YAExC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBAClC,OAAO,IAAI,CAAC;aACb;YAED,OAAO,CACL,6BACE,SAAS,EAAE,eAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,QAAQ;oBACvD,GAAC,0CAA0C,GAAG,MAAM,CAAC,wBAAwB,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC;wBACjG;gBAED,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBAC5B,6BAAK,SAAS,EAAE,eAAG,CAAC,iCAAiC,EAAE,MAAM,CAAC,eAAe,CAAC;oBAC5E,8BAAM,SAAS,EAAE,eAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,IAAI,CAAC,IAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAQ;oBACvG,8BAAM,SAAS,EAAE,eAAG,CAAC,kCAAkC,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAG,QAAQ,CAAQ,CAChG,CACF,CACP,CAAC;;QACJ,CAAC;QAEO,6CAAc,GAAtB,UAAuB,MAAqC;YAC1D,OAAO,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,iCAAiC,EAAE,MAAM,CAAC,OAAO,CAAC;gBACnE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;gBACxD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC1B,CACP,CAAC;QACJ,CAAC;QAEO,4CAAa,GAArB,UAAsB,MAAmC;YACvD,OAAO,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,gCAAgC,EAAE,MAAM,CAAC,MAAM,CAAC;gBAClE,oBAAC,yBAAW,IACV,aAAa,EAAE,MAAM,CAAC,QAAQ,EAC9B,IAAI,EAAE,MAAM,CAAC,IAAI,EACjB,QAAQ,EAAE,MAAM,CAAC,eAAe,EAChC,aAAa,EAAE,MAAM,CAAC,aAAa,EACnC,kBAAkB,EAAE,MAAM,CAAC,kBAAkB,EAC7C,IAAI,EAAC,cAAc,EACnB,IAAI,EAAE,qBAAW,CAAC,MAAM,GACxB,CACE,CACP,CAAC;QACJ,CAAC;QAEO,6CAAc,GAAtB,UAAuB,MAAqC;YAC1D,IAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAEhC,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;gBACtB,UAAU,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC1C;YAED,OAAO,UAAU,CAAC;QACpB,CAAC;QACH,2BAAC;IAAD,CAAC,AAzDD,CAA0C,yBAAa,GAyDtD;IAzDY,oDAAoB","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent, css } from '../../Utilities';\r\nimport { IDocumentCardActivityProps, IDocumentCardActivityPerson } from './DocumentCard.types';\r\nimport { PersonaSize } from '../../Persona';\r\nimport { PersonaCoin } from '../../PersonaCoin';\r\nimport * as stylesImport from './DocumentCard.scss';\r\nconst styles: any = stylesImport;\r\n\r\nexport class DocumentCardActivity extends BaseComponent<IDocumentCardActivityProps, any> {\r\n  public render(): JSX.Element | null {\r\n    const { activity, people } = this.props;\r\n\r\n    if (!people || people.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={css('ms-DocumentCardActivity', styles.activity, {\r\n          ['ms-DocumentCardActivity--multiplePeople ' + styles.activityIsMultiplePeople]: people.length > 1\r\n        })}\r\n      >\r\n        {this._renderAvatars(people)}\r\n        <div className={css('ms-DocumentCardActivity-details', styles.activityDetails)}>\r\n          <span className={css('ms-DocumentCardActivity-name', styles.name)}>{this._getNameString(people)}</span>\r\n          <span className={css('ms-DocumentCardActivity-activity', styles.activityActivity)}>{activity}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\r\n    return (\r\n      <div className={css('ms-DocumentCardActivity-avatars', styles.avatars)}>\r\n        {people.length > 1 ? this._renderAvatar(people[1]) : null}\r\n        {this._renderAvatar(people[0])}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _renderAvatar(person: IDocumentCardActivityPerson): JSX.Element {\r\n    return (\r\n      <div className={css('ms-DocumentCardActivity-avatar', styles.avatar)}>\r\n        <PersonaCoin\r\n          imageInitials={person.initials}\r\n          text={person.name}\r\n          imageUrl={person.profileImageSrc}\r\n          initialsColor={person.initialsColor}\r\n          allowPhoneInitials={person.allowPhoneInitials}\r\n          role=\"presentation\"\r\n          size={PersonaSize.size32}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\r\n    let nameString = people[0].name;\r\n\r\n    if (people.length >= 2) {\r\n      nameString += ' +' + (people.length - 1);\r\n    }\r\n\r\n    return nameString;\r\n  }\r\n}\r\n"]}