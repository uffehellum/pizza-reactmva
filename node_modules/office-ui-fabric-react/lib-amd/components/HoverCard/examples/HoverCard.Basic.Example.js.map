{"version":3,"file":"HoverCard.Basic.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.Basic.Example.tsx"],"names":[],"mappings":";;;IAOA,IAAI,MAAa,CAAC;IAOlB;QAA2C,iDAAyC;QAClF,+BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAQb;YAgBO,yBAAmB,GAAG,UAAC,IAAS,EAAE,KAAa,EAAE,MAAe;gBACtE,IAAM,kBAAkB,GAAwB;oBAC9C,mBAAmB,EAAE,KAAI,CAAC,oBAAoB;oBAC9C,oBAAoB,EAAE,KAAI,CAAC,qBAAqB;oBAChD,UAAU,EAAE,IAAI;iBACjB,CAAC;gBAEF,IAAI,MAAM,CAAC,GAAG,KAAK,UAAU,EAAE;oBAC7B,OAAO,CACL,oBAAC,qBAAS,IAAC,EAAE,EAAC,OAAO,EAAC,kBAAkB,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,IAAI;wBACpF,6BAAK,SAAS,EAAC,gBAAgB,IAAE,IAAI,CAAC,QAAQ,CAAO,CAC3C,CACb,CAAC;iBACH;gBAED,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC,CAAC;YAEM,0BAAoB,GAAG,UAAC,IAAS;gBACvC,OAAO,CACL,6BAAK,SAAS,EAAC,8BAA8B;oBAC3C,2BAAG,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAE,+BAA6B,IAAI,CAAC,QAAU,IAClE,IAAI,CAAC,QAAQ,CACZ,CACA,CACP,CAAC;YACJ,CAAC,CAAC;YAEM,2BAAqB,GAAG,UAAC,IAAS;gBAClC,IAAA,gBAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;gBACtC,OAAO,CACL,6BAAK,SAAS,EAAC,+BAA+B;oBAC3C,IAAI,CAAC,WAAW;oBACjB,oBAAC,yBAAW,IAAC,MAAM,EAAC,iBAAiB,EAAC,KAAK,EAAE,KAAM,EAAE,OAAO,EAAE,OAAO,GAAI,CACrE,CACP,CAAC;YACJ,CAAC,CAAC;YA1DA,MAAM,GAAG,MAAM,IAAI,6BAAe,CAAC,EAAE,CAAC,CAAC;YAEvC,KAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,aAAa,EAAE;aACzB,CAAC;;QACJ,CAAC;QAEM,sCAAM,GAAb;YACQ,IAAA,eAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;YAEtC,OAAO,CACL;gBACE;;oBACiB,0CAAe;iGAC5B;gBACJ,6IAAkH;gBAClH,oBAAC,yBAAW,IAAC,MAAM,EAAC,UAAU,EAAC,KAAK,EAAE,KAAM,EAAE,OAAO,EAAE,OAAO,EAAE,kBAAkB,EAAE,IAAI,CAAC,mBAAmB,GAAI,CAC5G,CACP,CAAC;QACJ,CAAC;QAuCH,4BAAC;IAAD,CAAC,AA/DD,CAA2C,yBAAa,GA+DvD;IA/DY,sDAAqB;IAiElC;QACE,OAAO,0BAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAnD,CAAmD,CAAC,CAAC;IACpG,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { HoverCard, IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { createListItems } from 'office-ui-fabric-react/lib/utilities/exampleData';\r\nimport './HoverCard.Example.scss';\r\n\r\nlet _items: any[];\r\n\r\nexport interface IHoverCardExampleState {\r\n  items?: any[];\r\n  columns?: IColumn[];\r\n}\r\n\r\nexport class HoverCardBasicExample extends BaseComponent<{}, IHoverCardExampleState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    _items = _items || createListItems(10);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      columns: _buildColumns()\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { items, columns } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <p>\r\n          Hover over the <i>location</i> cell of a row item to see the card or use the keyboard to navigate to it.\r\n        </p>\r\n        <p>When using the keyboard to tab to it, the card will open but navigation inside of it will not be available.</p>\r\n        <DetailsList setKey=\"hoverSet\" items={items!} columns={columns} onRenderItemColumn={this._onRenderItemColumn} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderItemColumn = (item: any, index: number, column: IColumn): JSX.Element => {\r\n    const expandingCardProps: IExpandingCardProps = {\r\n      onRenderCompactCard: this._onRenderCompactCard,\r\n      onRenderExpandedCard: this._onRenderExpandedCard,\r\n      renderData: item\r\n    };\r\n\r\n    if (column.key === 'location') {\r\n      return (\r\n        <HoverCard id=\"myID1\" expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\r\n          <div className=\"HoverCard-item\">{item.location}</div>\r\n        </HoverCard>\r\n      );\r\n    }\r\n\r\n    return item[column.key];\r\n  };\r\n\r\n  private _onRenderCompactCard = (item: any): JSX.Element => {\r\n    return (\r\n      <div className=\"hoverCardExample-compactCard\">\r\n        <a target=\"_blank\" href={`http://wikipedia.org/wiki/${item.location}`}>\r\n          {item.location}\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  private _onRenderExpandedCard = (item: any): JSX.Element => {\r\n    const { items, columns } = this.state;\r\n    return (\r\n      <div className=\"hoverCardExample-expandedCard\">\r\n        {item.description}\r\n        <DetailsList setKey=\"expandedCardSet\" items={items!} columns={columns} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nfunction _buildColumns() {\r\n  return buildColumns(_items).filter(column => column.name === 'location' || column.name === 'key');\r\n}\r\n"]}