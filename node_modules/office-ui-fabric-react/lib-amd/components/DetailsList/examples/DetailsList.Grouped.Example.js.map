{"version":3,"file":"DetailsList.Grouped.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.Grouped.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { IDetailsList, DetailsList, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport './DetailsList.Grouped.Example.scss';\r\n\r\nconst _columns = [\r\n  {\r\n    key: 'name',\r\n    name: 'Name',\r\n    fieldName: 'name',\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: 'color',\r\n    name: 'Color',\r\n    fieldName: 'color',\r\n    minWidth: 100,\r\n    maxWidth: 200\r\n  }\r\n];\r\nconst _items = [\r\n  {\r\n    key: 'a',\r\n    name: 'a',\r\n    color: 'red'\r\n  },\r\n  {\r\n    key: 'b',\r\n    name: 'b',\r\n    color: 'red'\r\n  },\r\n  {\r\n    key: 'c',\r\n    name: 'c',\r\n    color: 'blue'\r\n  },\r\n  {\r\n    key: 'd',\r\n    name: 'd',\r\n    color: 'blue'\r\n  },\r\n  {\r\n    key: 'e',\r\n    name: 'e',\r\n    color: 'blue'\r\n  }\r\n];\r\n\r\nexport class DetailsListGroupedExample extends BaseComponent<\r\n  {},\r\n  {\r\n    items: {}[];\r\n    showItemIndexInView: boolean;\r\n  }\r\n> {\r\n  private _root = React.createRef<IDetailsList>();\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: _items,\r\n      showItemIndexInView: false\r\n    };\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.state.showItemIndexInView) {\r\n      const itemIndexInView = this._root!.current!.getStartItemIndexInView();\r\n      alert('unmounting, getting first item index that was in view: ' + itemIndexInView);\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    const { items } = this.state;\r\n\r\n    return (\r\n      <Fabric className=\"DetailsList-grouped-example\">\r\n        <div>\r\n          <Checkbox\r\n            label=\"Show index of the first item in view when unmounting\"\r\n            checked={this.state.showItemIndexInView}\r\n            onChange={this._onShowItemIndexInViewChanged}\r\n          />\r\n        </div>\r\n        <DefaultButton onClick={this._addItem} text=\"Add an item\" />\r\n        <DetailsList\r\n          componentRef={this._root}\r\n          items={items}\r\n          groups={[\r\n            {\r\n              key: 'groupred0',\r\n              name: 'By \"red\"',\r\n              startIndex: 0,\r\n              count: 2\r\n            },\r\n            {\r\n              key: 'groupgreen2',\r\n              name: 'By \"green\"',\r\n              startIndex: 2,\r\n              count: 0\r\n            },\r\n            {\r\n              key: 'groupblue2',\r\n              name: 'By \"blue\"',\r\n              startIndex: 2,\r\n              count: items.length - 2\r\n            }\r\n          ]}\r\n          columns={_columns}\r\n          ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n          ariaLabelForSelectionColumn=\"Toggle selection\"\r\n          groupProps={{\r\n            showEmptyGroups: true\r\n          }}\r\n          onRenderItemColumn={this._onRenderColumn}\r\n        />\r\n      </Fabric>\r\n    );\r\n  }\r\n\r\n  private _addItem = (): void => {\r\n    const items = this.state.items;\r\n\r\n    this.setState(\r\n      {\r\n        items: items.concat([\r\n          {\r\n            key: 'item-' + items.length,\r\n            name: 'New item ' + items.length,\r\n            color: 'blue'\r\n          }\r\n        ])\r\n      },\r\n      () => {\r\n        if (this._root.current) {\r\n          this._root.current.focusIndex(items.length, true);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  private _onRenderColumn(item: any, index: number, column: IColumn) {\r\n    let value = item && column && column.fieldName ? item[column.fieldName] : '';\r\n\r\n    if (value === null || value === undefined) {\r\n      value = '';\r\n    }\r\n\r\n    return (\r\n      <div className={'grouped-example-column'} data-is-focusable={true}>\r\n        {value}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onShowItemIndexInViewChanged = (event: React.FormEvent<HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({\r\n      showItemIndexInView: checked\r\n    });\r\n  };\r\n}\r\n"]}