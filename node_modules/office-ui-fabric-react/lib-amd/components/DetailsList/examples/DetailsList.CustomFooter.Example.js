define(["require", "exports", "tslib", "react", "office-ui-fabric-react/lib/TextField", "office-ui-fabric-react/lib/DetailsList", "office-ui-fabric-react/lib/MarqueeSelection", "office-ui-fabric-react/lib/Checkbox"], function (require, exports, tslib_1, React, TextField_1, DetailsList_1, MarqueeSelection_1, Checkbox_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var _items = [];
    var _columns = [
        {
            key: 'column1',
            name: 'Name',
            fieldName: 'name',
            minWidth: 100,
            maxWidth: 200,
            isResizable: true,
            ariaLabel: 'Operations for name'
        },
        {
            key: 'column2',
            name: 'Value',
            fieldName: 'value',
            minWidth: 100,
            maxWidth: 200,
            isResizable: true,
            ariaLabel: 'Operations for value'
        }
    ];
    var DetailsListCustomFooterExample = /** @class */ (function (_super) {
        tslib_1.__extends(DetailsListCustomFooterExample, _super);
        function DetailsListCustomFooterExample(props) {
            var _this = _super.call(this, props) || this;
            _this._detailsList = React.createRef();
            _this._onChange = function (ev, text) {
                _this.setState({ items: text ? _items.filter(function (i) { return i.name.toLowerCase().indexOf(text) > -1; }) : _items });
            };
            _this._onShowItemIndexInViewChanged = function (event, checked) {
                _this.setState({
                    showItemIndexInView: checked
                });
            };
            // Populate with items for demos.
            if (_items.length === 0) {
                for (var i = 0; i < 2; i++) {
                    _items.push({
                        key: i,
                        name: 'Item ' + i,
                        value: i
                    });
                }
            }
            _this._selection = new DetailsList_1.Selection({
                onSelectionChanged: function () { return _this.setState({ selectionDetails: _this._getSelectionDetails() }); }
            });
            _this.state = {
                items: _items,
                selectionDetails: _this._getSelectionDetails(),
                showItemIndexInView: false
            };
            return _this;
        }
        DetailsListCustomFooterExample.prototype.render = function () {
            var _a = this.state, items = _a.items, selectionDetails = _a.selectionDetails;
            return (React.createElement("div", null,
                React.createElement("div", null, selectionDetails),
                React.createElement("div", null,
                    React.createElement(Checkbox_1.Checkbox, { label: "Show index of the first item in view when unmounting", checked: this.state.showItemIndexInView, onChange: this._onShowItemIndexInViewChanged })),
                React.createElement(TextField_1.TextField, { label: "Filter by name:", onChange: this._onChange }),
                React.createElement(MarqueeSelection_1.MarqueeSelection, { selection: this._selection },
                    React.createElement(DetailsList_1.DetailsList, { componentRef: this._detailsList, items: items, columns: _columns, setKey: "set", layoutMode: DetailsList_1.DetailsListLayoutMode.fixedColumns, selection: this._selection, selectionPreservedOnEmptyClick: true, ariaLabelForSelectionColumn: "Toggle selection", ariaLabelForSelectAllCheckbox: "Toggle selection for all items", onItemInvoked: this._onItemInvoked, onRenderDetailsFooter: this._onRenderDetailsFooter }))));
        };
        DetailsListCustomFooterExample.prototype.componentWillUnmount = function () {
            if (this.state.showItemIndexInView) {
                var itemIndexInView = this._detailsList.current.getStartItemIndexInView();
                alert('unmounting, getting first item index that was in view: ' + itemIndexInView);
            }
        };
        DetailsListCustomFooterExample.prototype._getSelectionDetails = function () {
            var selectionCount = this._selection.getSelectedCount();
            switch (selectionCount) {
                case 0:
                    return 'No items selected';
                case 1:
                    return '1 item selected: ' + this._selection.getSelection()[0].name;
                default:
                    return selectionCount + " items selected";
            }
        };
        DetailsListCustomFooterExample.prototype._onItemInvoked = function (item) {
            alert("Item invoked: " + item.name);
        };
        DetailsListCustomFooterExample.prototype._onRenderDetailsFooter = function (detailsFooterProps, defaultRender) {
            return (React.createElement(DetailsList_1.DetailsRow, { columns: detailsFooterProps.columns, item: {}, itemIndex: -1, groupNestingDepth: detailsFooterProps.groupNestingDepth, selectionMode: DetailsList_1.SelectionMode.single, selection: detailsFooterProps.selection, onRenderItemColumn: _renderDetailsFooterItemColumn, onRenderCheck: _onRenderCheckForFooterRow }));
        };
        return DetailsListCustomFooterExample;
    }(React.Component));
    exports.DetailsListCustomFooterExample = DetailsListCustomFooterExample;
    function _renderDetailsFooterItemColumn(item, index, column) {
        return (React.createElement("div", null,
            React.createElement("span", null,
                React.createElement("b", null, column.name))));
    }
    function _onRenderCheckForFooterRow(props) {
        return React.createElement(DetailsList_1.DetailsRowCheck, tslib_1.__assign({}, props, { style: { visibility: 'hidden' }, selected: true }));
    }
});
//# sourceMappingURL=DetailsList.CustomFooter.Example.js.map