{"version":3,"file":"Panel.PreventDefault.Example.js","sourceRoot":"../src/","sources":["components/Panel/examples/Panel.PreventDefault.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,mCAAmC,CAAC;AAClE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAO3D;IAAgD,sDAAgD;IAC9F,oCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAEb;QA2BO,eAAS,GAAG,UAAC,EAA4C;YAC/D,IAAI,EAAE,CAAC,OAAO,KAAK,QAAQ,CAAC,MAAM,EAAE;gBAClC,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,EAAE,CAAC,eAAe,EAAE,CAAC;aACtB;QACH,CAAC,CAAC;QAEM,oBAAc,GAAG;YACvB,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC;QAEM,eAAS,GAAG,UAAC,EAAqC;YACxD,IAAI,EAAE,IAAI,EAAE,CAAC,OAAO,KAAK,QAAQ,CAAC,MAAM,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAChE,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,OAAO;aACR;YAED,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QACtC,CAAC,CAAC;QA9CA,KAAI,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;IACpD,CAAC;IAEM,2CAAM,GAAb;QAAA,iBAuBC;QAtBC,OAAO,CACL;YACE,oBAAC,aAAa,IACZ,aAAa,EAAC,wBAAwB;gBACtC,yCAAyC;gBACzC,OAAO,EAAE,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAlC,CAAkC,EACjD,IAAI,EAAC,YAAY,GACjB;YACF,oBAAC,KAAK,IACJ,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,EAC5B,IAAI,EAAE,SAAS,CAAC,cAAc;gBAC9B,yCAAyC;gBACzC,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,UAAU,EAAC,OAAO;gBAElB,gGAAuE;gBACvE,kCAAU,SAAS,EAAE,IAAI,CAAC,SAAS,GAAI;gBAEvC,oBAAC,MAAM,IAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,KAAK,EAAC,8BAA8B,GAAG,CACtG,CACJ,CACP,CAAC;IACJ,CAAC;IAqBH,iCAAC;AAAD,CAAC,AAlDD,CAAgD,KAAK,CAAC,SAAS,GAkD9D","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { KeyCodes } from '@uifabric/utilities';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\n\r\nexport interface IPanelPreventDefaultExample {\r\n  showPanel: boolean;\r\n  allowEsc: boolean;\r\n}\r\n\r\nexport class PanelPreventDefaultExample extends React.Component<{}, IPanelPreventDefaultExample> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { showPanel: false, allowEsc: true };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <div>\r\n        <DefaultButton\r\n          secondaryText=\"Opens the Sample Panel\"\r\n          // tslint:disable-next-line:jsx-no-lambda\r\n          onClick={() => this.setState({ showPanel: true })}\r\n          text=\"Open Panel\"\r\n        />\r\n        <Panel\r\n          isOpen={this.state.showPanel}\r\n          type={PanelType.smallFixedNear}\r\n          // tslint:disable-next-line:jsx-no-lambda\r\n          onDismiss={this.onDismiss}\r\n          headerText=\"Panel\"\r\n        >\r\n          <div>Hitting escape inside the text area will not close the Panel</div>\r\n          <textarea onKeyDown={this.onKeyDown} />\r\n\r\n          <Toggle checked={this.state.allowEsc} onChange={this.toggleAllowEsc} label=\"Allow ESC key to close panel\" />\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onKeyDown = (ev: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (ev.keyCode === KeyCodes.escape) {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private toggleAllowEsc = () => {\r\n    this.setState({ allowEsc: !this.state.allowEsc });\r\n  };\r\n\r\n  private onDismiss = (ev?: React.KeyboardEvent<HTMLElement>) => {\r\n    if (ev && ev.keyCode === KeyCodes.escape && !this.state.allowEsc) {\r\n      ev.preventDefault();\r\n      return;\r\n    }\r\n\r\n    this.setState({ showPanel: false });\r\n  };\r\n}\r\n"]}