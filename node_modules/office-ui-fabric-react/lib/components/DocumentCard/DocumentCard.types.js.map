{"version":3,"file":"DocumentCard.types.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCard.types.ts"],"names":[],"mappings":"AA4DA,MAAM,CAAN,IAAY,gBASX;AATD,WAAY,gBAAgB;IAC1B;;OAEG;IACH,2DAAU,CAAA;IACV;;OAEG;IACH,6DAAW,CAAA;AACb,CAAC,EATW,gBAAgB,KAAhB,gBAAgB,QAS3B","sourcesContent":["import * as React from 'react';\r\nimport { DocumentCardTitle } from './DocumentCardTitle';\r\nimport { DocumentCardLocation } from './DocumentCardLocation';\r\nimport { DocumentCardActivity } from './DocumentCardActivity';\r\nimport { DocumentCardActions } from './DocumentCardActions';\r\nimport { DocumentCardLogo } from './DocumentCardLogo';\r\nimport { DocumentCardStatus } from './DocumentCardStatus';\r\nimport { PersonaInitialsColor } from '../../Persona';\r\nimport { ImageFit } from '../../Image';\r\nimport { IButtonProps } from '../../Button';\r\nimport { IIconProps } from '../../Icon';\r\nimport { IBaseProps, IRefObject } from '../../Utilities';\r\nimport { ILinkProps } from '../../Link';\r\n\r\nexport interface IDocumentCard {\r\n  /**\r\n   * Sets focus to the DocumentCard.\r\n   */\r\n  focus: () => void;\r\n}\r\n\r\nexport interface IDocumentCardProps extends IBaseProps<IDocumentCard> {\r\n  /**\r\n   * Optional callback to access the IDocumentCard interface. Use this instead of ref for accessing\r\n   * the public methods and properties of the component.\r\n   */\r\n  componentRef?: IRefObject<IDocumentCard>;\r\n\r\n  /**\r\n   * The type of DocumentCard to display.\r\n   * @defaultvalue DocumentCardType.normal\r\n   */\r\n  type?: DocumentCardType;\r\n\r\n  /**\r\n   * Function to call when the card is clicked or keyboard Enter/Space is pushed.\r\n   */\r\n  onClick?: (ev?: React.SyntheticEvent<HTMLElement>) => void;\r\n\r\n  /**\r\n   * A URL to navigate to when the card is clicked. If a function has also been provided,\r\n   * it will be used instead of the URL.\r\n   */\r\n  onClickHref?: string;\r\n\r\n  /**\r\n   * Optional class for document card.\r\n   */\r\n  className?: string;\r\n\r\n  /**\r\n   * Hex color value of the line below the card, which should correspond to the document type.\r\n   * This should only be supplied when using the 'compact' card layout.\r\n   *\r\n   * Deprecated at v4.17.1, to be removed at \\>= v5.0.0.\r\n   * @deprecated To be removed at v5.0.0.\r\n   */\r\n  accentColor?: string;\r\n}\r\n\r\nexport enum DocumentCardType {\r\n  /**\r\n   * Standard DocumentCard.\r\n   */\r\n  normal = 0,\r\n  /**\r\n   * Compact layout. Displays the preview beside the details, rather than above.\r\n   */\r\n  compact = 1\r\n}\r\n\r\nexport interface IDocumentCardPreviewProps extends IBaseProps<{}> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * One or more preview images to display.\r\n   */\r\n  previewImages: IDocumentCardPreviewImage[];\r\n\r\n  /**\r\n   * The function return string that will describe the number of overflow documents.\r\n   * such as  (overflowCount: number) =\\> `+${ overflowCount } more`,\r\n   */\r\n  getOverflowDocumentCountText?: (overflowCount: number) => string;\r\n}\r\n\r\nexport interface IDocumentCardPreviewImage {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * File name for the document this preview represents.\r\n   */\r\n  name?: string;\r\n\r\n  /**\r\n   * URL to view the file.\r\n   * @deprecated Use `href` inside of `linkProps` instead.\r\n   */\r\n  url?: string;\r\n\r\n  /**\r\n   * Props to pass to Link component\r\n   */\r\n  linkProps?: ILinkProps;\r\n\r\n  /**\r\n   * Path to the preview image.\r\n   */\r\n  previewImageSrc?: string;\r\n\r\n  /**\r\n   * Deprecated at v1.3.6, to be removed at \\>= v2.0.0.\r\n   * @deprecated To be removed at v2.0.0.\r\n   */\r\n  errorImageSrc?: string;\r\n\r\n  /**\r\n   * Path to the icon associated with this document type.\r\n   *\r\n   */\r\n  iconSrc?: string;\r\n\r\n  /**\r\n   * If provided, forces the preview image to be this width.\r\n   */\r\n  width?: number;\r\n\r\n  /**\r\n   * If provided, forces the preview image to be this height.\r\n   */\r\n  height?: number;\r\n\r\n  /**\r\n   * Used to determine how to size the image to fit the dimensions of the component.\r\n   * If both dimensions are provided, then the image is fit using ImageFit.scale, otherwise ImageFit.none is used.\r\n   */\r\n  imageFit?: ImageFit;\r\n\r\n  /**\r\n   * Hex color value of the line below the preview, which should correspond to the document type.\r\n   *\r\n   * Deprecated at v4.17.1, to be removed at \\>= v5.0.0.\r\n   * @deprecated To be removed at v5.0.0.\r\n   */\r\n  accentColor?: string;\r\n\r\n  /**\r\n   * The props for the preview icon.\r\n   * If provided, icon will be rendered instead of image.\r\n   */\r\n  previewIconProps?: IIconProps;\r\n\r\n  /**\r\n   * The props for the preview icon container classname.\r\n   * If provided, icon container classname will be used..\r\n   */\r\n  previewIconContainerClass?: string;\r\n}\r\n\r\nexport interface IDocumentCardTitleProps extends React.ClassAttributes<DocumentCardTitle> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * Title text. If the card represents more than one document, this should be the title of one document and a \"+X\" string.\r\n   * For example, a collection of four documents would have a string of \"Document.docx +3\".\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * Whether we truncate the title to fit within the box. May have a performance impact.\r\n   * @defaultvalue true\r\n   */\r\n  shouldTruncate?: boolean;\r\n\r\n  /**\r\n   * Whether show as title as secondary title style such as smaller font and lighter color.\r\n   * @defaultvalue false\r\n   */\r\n  showAsSecondaryTitle?: boolean;\r\n}\r\n\r\nexport interface IDocumentCardLocationProps extends React.ClassAttributes<DocumentCardLocation> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * Text for the location of the document.\r\n   */\r\n  location: string;\r\n\r\n  /**\r\n   * URL to navigate to for this location.\r\n   */\r\n  locationHref?: string;\r\n\r\n  /**\r\n   * Function to call when the location is clicked.\r\n   */\r\n  onClick?: (ev?: React.MouseEvent<HTMLElement>) => void;\r\n\r\n  /**\r\n   * Aria label for the link to the document location.\r\n   */\r\n  ariaLabel?: string;\r\n}\r\n\r\nexport interface IDocumentCardActivityProps extends React.ClassAttributes<DocumentCardActivity> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * Describes the activity that has taken place, such as \"Created Feb 23, 2016\".\r\n   */\r\n  activity: string;\r\n\r\n  /**\r\n   * One or more people who are involved in this activity.\r\n   */\r\n  people: IDocumentCardActivityPerson[];\r\n}\r\n\r\nexport interface IDocumentCardActivityPerson {\r\n  /**\r\n   * The name of the person.\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Path to the profile photo of the person.\r\n   */\r\n  profileImageSrc: string;\r\n\r\n  /**\r\n   * The user's initials to display in the profile photo area when there is no image.\r\n   */\r\n  initials?: string;\r\n\r\n  /**\r\n   * Whether initials are calculated for phone numbers and number sequences.\r\n   * Example: Set property to true to get initials for project names consisting of numbers only.\r\n   * @defaultvalue false\r\n   */\r\n  allowPhoneInitials?: boolean;\r\n\r\n  /**\r\n   * The background color when the user's initials are displayed.\r\n   * @defaultvalue PersonaInitialsColor.blue\r\n   */\r\n  initialsColor?: PersonaInitialsColor;\r\n}\r\n\r\nexport interface IDocumentCardActionsProps extends React.ClassAttributes<DocumentCardActions> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n\r\n  /**\r\n   * The actions available for this document.\r\n   */\r\n  actions: IButtonProps[];\r\n\r\n  /**\r\n   * The number of views this document has received.\r\n   */\r\n  views?: Number;\r\n}\r\n\r\nexport interface IDocumentCardLogoProps extends React.ClassAttributes<DocumentCardLogo> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n  /**\r\n   * Describes DocumentCard Logo badge.\r\n   */\r\n  logoIcon: string;\r\n\r\n  /**\r\n   * Describe Logo name, optional.\r\n   */\r\n  logoName?: string;\r\n}\r\n\r\nexport interface IDocumentCardStatusProps extends React.ClassAttributes<DocumentCardStatus> {\r\n  /**\r\n   * Gets the component ref.\r\n   */\r\n  componentRef?: IRefObject<{}>;\r\n  /**\r\n   * Describes DocumentCard status icon.\r\n   */\r\n  statusIcon?: string;\r\n\r\n  /**\r\n   * Describe status information. Required field.\r\n   */\r\n  status: string;\r\n}\r\n"]}