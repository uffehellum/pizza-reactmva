{"version":3,"file":"PeoplePicker.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePicker.tsx"],"names":[],"mappings":";AAAA,oBAAoB;AACpB,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,mBAAmB;AACnB,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAChE,OAAO,EAAiD,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACrG,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAC;AAE9E,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,MAAM,2CAA2C,CAAC;AACtG,OAAO,qBAAqB,CAAC;AAK7B;IAAsC,4CAA6C;IAAnF;;IAAqF,CAAC;IAAD,uBAAC;AAAD,CAAC,AAAtF,CAAsC,UAAU,GAAsC;;AAEtF;IAA4C,kDAAsD;IAAlG;;IAAoG,CAAC;IAAD,6BAAC;AAAD,CAAC,AAArG,CAA4C,mBAAmB,GAAsC;;AAErG;;GAEG;AACH;IAAwC,8CAAgB;IAAxD;;IAOA,CAAC;IANe,+BAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,mBAAmB,uBAAK,KAAK,EAAI,EAAlC,CAAkC;QACnF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC;YACrF,OAAA,oBAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG;QAApD,CAAoD;QACtD,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACJ,yBAAC;CAAA,AAPD,CAAwC,gBAAgB,GAOvD;SAPY,kBAAkB;AAS/B;;GAEG;AACH;IAAyC,+CAAgB;IAAzD;;IAOA,CAAC;IANe,gCAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,mBAAmB,uBAAK,KAAK,EAAI,EAAlC,CAAkC;QACnF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC;YACrF,OAAA,mBAAmB,sBAAM,KAAK,wBAAS,SAAS,EAAG;QAAnD,CAAmD;QACrD,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACJ,0BAAC;CAAA,AAPD,CAAyC,gBAAgB,GAOxD;SAPY,mBAAmB;AAShC;;GAEG;AACH;IAAsC,4CAAsB;IAA5D;;IAOA,CAAC;IANe,6BAAY,GAAG;QAC3B,YAAY,EAAE,UAAC,KAA6B,IAAK,OAAA,oBAAC,mBAAmB,uBAAK,KAAK,EAAI,EAAlC,CAAkC;QACnF,uBAAuB,EAAE,UAAC,KAAoB,EAAE,SAAuC;YACrF,OAAA,oBAAoB,sBAAM,KAAK,wBAAS,SAAS,EAAG;QAApD,CAAoD;QACtD,iBAAiB,EAAE,iBAAiB;KACrC,CAAC;IACJ,uBAAC;CAAA,AAPD,CAAsC,sBAAsB,GAO3D;SAPY,gBAAgB;AAe7B,MAAM,4BACJ,IAAY,EACZ,sBAAuC,EACvC,kBAA2B;IAE3B,IAAM,gBAAgB,GAAG;QACvB,GAAG,EAAE,IAAI;QACT,WAAW,EAAE,IAAI;QACjB,aAAa,EAAE,GAAG;QAClB,eAAe,EAAE,sBAAsB;KACxC,CAAC;IAEF,IAAI,sBAAsB,KAAK,eAAe,CAAC,OAAO,EAAE;QACtD,gBAAgB,CAAC,aAAa,GAAG,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,kBAAkB,CAAC,CAAC;KAClF;IAED,OAAO,gBAAgB,CAAC;AAC1B,CAAC","sourcesContent":["/* tslint:disable */\r\nimport * as React from 'react';\r\n/* tslint:enable */\r\nimport { getRTL, getInitials } from '../../../Utilities';\r\nimport { BasePicker, BasePickerListBelow } from '../BasePicker';\r\nimport { IBasePickerProps, IBasePickerSuggestionsProps, ValidationState } from '../BasePicker.types';\r\nimport { SelectedItemDefault } from './PeoplePickerItems/SelectedItemDefault';\r\nimport { IPersonaProps } from '../../../Persona';\r\nimport { SuggestionItemSmall, SuggestionItemNormal } from './PeoplePickerItems/SuggestionItemDefault';\r\nimport './PeoplePicker.scss';\r\nimport { IPeoplePickerItemProps } from './PeoplePickerItems/PeoplePickerItem.types';\r\n\r\nexport interface IPeoplePickerProps extends IBasePickerProps<IPersonaProps> {}\r\n\r\nexport class BasePeoplePicker extends BasePicker<IPersonaProps, IPeoplePickerProps> {}\r\n\r\nexport class MemberListPeoplePicker extends BasePickerListBelow<IPersonaProps, IPeoplePickerProps> {}\r\n\r\n/**\r\n * Standard People Picker.\r\n */\r\nexport class NormalPeoplePicker extends BasePeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault {...props} />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) =>\r\n      SuggestionItemNormal({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n * Compact layout. It uses small personas when displaying search results.\r\n */\r\nexport class CompactPeoplePicker extends BasePeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault {...props} />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) =>\r\n      SuggestionItemSmall({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\n/**\r\n * MemberList layout. The selected people show up below the search box.\r\n */\r\nexport class ListPeoplePicker extends MemberListPeoplePicker {\r\n  public static defaultProps = {\r\n    onRenderItem: (props: IPeoplePickerItemProps) => <SelectedItemDefault {...props} />,\r\n    onRenderSuggestionsItem: (props: IPersonaProps, itemProps?: IBasePickerSuggestionsProps) =>\r\n      SuggestionItemNormal({ ...props }, { ...itemProps }),\r\n    createGenericItem: createGenericItem\r\n  };\r\n}\r\n\r\nexport interface IGenericItem {\r\n  primaryText: string;\r\n  imageInitials: string;\r\n  ValidationState: ValidationState;\r\n}\r\n\r\nexport function createGenericItem(\r\n  name: string,\r\n  currentValidationState: ValidationState,\r\n  allowPhoneInitials: boolean\r\n): IGenericItem & { key: React.Key } {\r\n  const personaToConvert = {\r\n    key: name,\r\n    primaryText: name,\r\n    imageInitials: '!',\r\n    ValidationState: currentValidationState\r\n  };\r\n\r\n  if (currentValidationState !== ValidationState.warning) {\r\n    personaToConvert.imageInitials = getInitials(name, getRTL(), allowPhoneInitials);\r\n  }\r\n\r\n  return personaToConvert;\r\n}\r\n"]}