{"version":3,"file":"Layer.Hosted.Example.js","sourceRoot":"../src/","sources":["components/Layer/examples/Layer.Hosted.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Checkbox } from 'office-ui-fabric-react/lib/Checkbox';\r\nimport { Layer, LayerHost } from 'office-ui-fabric-react/lib/Layer';\r\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { AnimationClassNames } from 'office-ui-fabric-react/lib/Styling';\r\nimport './Layer.Example.scss';\r\nimport * as exampleStylesImport from 'office-ui-fabric-react/lib/common/_exampleStyles.scss';\r\nconst exampleStyles: any = exampleStylesImport;\r\n\r\nexport class LayerHostedExample extends React.Component<\r\n  {},\r\n  {\r\n    showLayer: boolean;\r\n    showLayerNoId: boolean;\r\n    showHost: boolean;\r\n  }\r\n> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      showLayer: false,\r\n      showLayerNoId: false,\r\n      showHost: true\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { showLayer, showLayerNoId, showHost } = this.state;\r\n    const content = <div className={'LayerExample-content ' + AnimationClassNames.scaleUpIn100}>This is example layer content.</div>;\r\n\r\n    return (\r\n      <div>\r\n        <Toggle label=\"Show host\" checked={showHost} onChange={this._onChangeToggle} />\r\n\r\n        {showHost && <LayerHost id=\"layerhost1\" className=\"LayerExample-customHost\" />}\r\n\r\n        <p id=\"foo\">\r\n          In some cases, you may need to contain layered content within an area. Create an instance of a LayerHost along with an id, and\r\n          provide a hostId on the layer to render it within the specific host. (Note that it's important that you don't include children\r\n          within the LayerHost. It's meant to contain Layered content only.)\r\n        </p>\r\n\r\n        <Checkbox\r\n          className={exampleStyles.exampleCheckbox}\r\n          label=\"Render the box below in a Layer and target it at hostId=layerhost1\"\r\n          checked={showLayer}\r\n          onChange={this._onChangeCheckbox}\r\n        />\r\n\r\n        {showLayer ? (\r\n          <Layer\r\n            hostId=\"layerhost1\"\r\n            onLayerDidMount={this._log('didmount')}\r\n            onLayerWillUnmount={this._log('willunmount')}\r\n            className={'exampleLayerClassName'}\r\n          >\r\n            {content}\r\n          </Layer>\r\n        ) : (\r\n          content\r\n        )}\r\n\r\n        <div className=\"LayerExample-nonLayered\">I am normally below the content.</div>\r\n\r\n        <p>If you do not specify a hostId then the hosted layer will default to being fixed to the page by default.</p>\r\n\r\n        <Checkbox\r\n          className={exampleStyles.exampleCheckbox}\r\n          label=\"Render the box below in a Layer without specifying a host, fixing it to the top of the page\"\r\n          checked={showLayerNoId}\r\n          onChange={this._onChangeCheckboxNoId}\r\n        />\r\n\r\n        {showLayerNoId ? (\r\n          <Layer onLayerDidMount={this._log('didmount')} onLayerWillUnmount={this._log('willunmount')}>\r\n            {content}\r\n          </Layer>\r\n        ) : (\r\n          content\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _log(text: string): () => void {\r\n    return (): void => {\r\n      console.log(text);\r\n    };\r\n  }\r\n\r\n  private _onChangeCheckbox = (ev: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({ showLayer: checked });\r\n  };\r\n\r\n  private _onChangeCheckboxNoId = (ev: React.FormEvent<HTMLElement | HTMLInputElement>, checked: boolean): void => {\r\n    this.setState({ showLayerNoId: checked });\r\n  };\r\n\r\n  private _onChangeToggle = (ev: React.MouseEvent<HTMLElement>, checked: boolean): void => {\r\n    this.setState({ showHost: checked });\r\n  };\r\n}\r\n"]}