{"version":3,"file":"CardCallout.js","sourceRoot":"../src/","sources":["components/HoverCard/CardCallout/CardCallout.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACnE,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAClE,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAQvD,MAAM,CAAC,IAAM,WAAW,GAAG,UAAC,KAAwB;IAEhD,IAAA,mBAAY,EAAZ,iCAAY,EACZ,0BAAgD,EAAhD,qEAAgD,EAChD,iDAAoB,EACpB,mCAAa,EACb,6BAAU,EACV,2BAAS,EACT,uBAAO,EACP,2BAAS,EACT,+BAAW,EACX,uBAAO,CACC;IAEV,OAAO,CACL,oBAAC,OAAO,uBACF,cAAc,CAAC,KAAK,EAAE,aAAa,CAAC,IACxC,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,aAAa,EACrB,aAAa,EAAE,KAAK,EACpB,eAAe,EAAE,eAAe,EAChC,oBAAoB,EAAE,oBAAoB,EAC1C,WAAW,EAAE,WAAW,EACxB,cAAc,EAAE,EAAE,EAClB,SAAS,EAAE,OAAO,EAClB,QAAQ,EAAE,QAAQ,KAEjB,SAAS,CAAC,CAAC,CAAC,CACX,oBAAC,aAAa,IAAC,oBAAoB,EAAE,KAAK,EAAE,2BAA2B,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,UAAU,IAC1G,OAAO,CACM,CACjB,CAAC,CAAC,CAAC,CACF,OAAO,CACR,CACO,CACX,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\n\r\nimport { divProperties, getNativeProps } from '../../../Utilities';\r\nimport { Callout } from '../../../Callout';\r\nimport { DirectionalHint } from '../../../common/DirectionalHint';\r\nimport { FocusTrapZone } from '../../../FocusTrapZone';\r\nimport { IBaseCardProps } from '../BaseCard.types';\r\n\r\nexport interface ICardCalloutProps extends IBaseCardProps<{}, {}, {}> {\r\n  finalHeight?: number;\r\n  content?: JSX.Element;\r\n}\r\n\r\nexport const CardCallout = (props: ICardCalloutProps) => {\r\n  const {\r\n    gapSpace = 0,\r\n    directionalHint = DirectionalHint.bottomLeftEdge,\r\n    directionalHintFixed,\r\n    targetElement,\r\n    firstFocus,\r\n    trapFocus,\r\n    onLeave,\r\n    className,\r\n    finalHeight,\r\n    content\r\n  } = props;\r\n\r\n  return (\r\n    <Callout\r\n      {...getNativeProps(props, divProperties)}\r\n      className={className}\r\n      target={targetElement}\r\n      isBeakVisible={false}\r\n      directionalHint={directionalHint}\r\n      directionalHintFixed={directionalHintFixed}\r\n      finalHeight={finalHeight}\r\n      minPagePadding={24}\r\n      onDismiss={onLeave}\r\n      gapSpace={gapSpace}\r\n    >\r\n      {trapFocus ? (\r\n        <FocusTrapZone forceFocusInsideTrap={false} isClickableOutsideFocusTrap={true} disableFirstFocus={!firstFocus}>\r\n          {content}\r\n        </FocusTrapZone>\r\n      ) : (\r\n        content\r\n      )}\r\n    </Callout>\r\n  );\r\n};\r\n"]}