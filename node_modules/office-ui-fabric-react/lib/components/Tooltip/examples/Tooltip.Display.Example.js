import * as tslib_1 from "tslib";
import * as React from 'react';
import { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';
import { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';
var TooltipDisplayExample = /** @class */ (function (_super) {
    tslib_1.__extends(TooltipDisplayExample, _super);
    function TooltipDisplayExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TooltipDisplayExample.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement("p", null, "In some cases when TooltipHost is wrapping inline-block or inline elements the positioning of the Tooltip may be off so it is recommended to modify the display property of the TooltipHost as in the following example."),
            React.createElement(TooltipHost, { content: "Incorrect positioning", id: "myID", calloutProps: { gapSpace: 0 } },
                React.createElement("button", { style: { fontSize: '2em' }, "aria-describedby": "myID" }, "Hover Over Me")),
            ' ',
            React.createElement(TooltipHost, { content: "Correct positioning", styles: { root: { display: 'inline-block' } }, id: "myID", calloutProps: { gapSpace: 0 } },
                React.createElement("button", { style: { fontSize: '2em' }, "aria-describedby": "myID" }, "Hover Over Me"))));
    };
    return TooltipDisplayExample;
}(BaseComponent));
export { TooltipDisplayExample };
//# sourceMappingURL=Tooltip.Display.Example.js.map